1	Today	today	NN	p2=NNP	4	poss	_
2	's	's	POS	_	1	possessive	_
3	Google	google	NNP	_	4	nn	_
4	Doodle	doodle	NNP	p2=NN	5	nsubj	5:A0=PAG
5	marks	mark	VBZ	pb=mark.01	34	ccomp	_
6	the	the	DT	_	8	det	_
7	40th	#ord#	JJ	_	8	amod	_
8	anniversary	anniversary	NN	_	5	dobj	5:A1=PPT
9	of	of	IN	_	8	prep	_
10	the	the	DT	_	11	det	_
11	Rubik	rubik	NNP	p2=NNPS	13	poss	_
12	's	's	POS	_	11	possessive	_
13	Cube	cube	NNP	_	9	pobj	_
14	:	:	:	_	34	punct	_
15	the	the	DT	_	16	det	_
16	toy	toy	NN	_	34	nsubj	34:A0=PPT;28:A0;24:A1=PPT
17	and	and	CC	_	16	cc	_
18	/	/	SYM	_	16	punct	_
19	or	or	CC	_	16	cc	_
20	puzzle	puzzle	NN	p2=VB	16	conj	_
21	that	that	WDT	_	24	nsubj	24:R-A0;28:R-A0
22	has	have	VBZ	_	24	aux	_
23	rapidly	rapidly	RB	_	24	advmod	24:AM-MNR
24	infuriated	infuriate	VBN	p2=JJ|pb=infuriate.01	16	rcmod	_
25	and	and	CC	_	24	cc	_
26	then	then	RB	_	28	advmod	28:AM-TMP
27	eternally	eternally	RB	_	28	advmod	28:AM-MNR
28	haunted	haunt	VBN	p2=VBD|pb=haunt.01	24	conj	_
29	almost	almost	RB	_	30	advmod	_
30	every	every	DT	_	31	num	_
31	person	person	NN	_	28	dobj	28:A1=PPT
32	to	to	TO	_	33	aux	_
33	have	have	VB	pb=have.03	31	infmod	_
34	walked	walk	VBD	p2=VBN|pb=walk.01	0	root	_
35	this	this	DT	_	37	det	_
36	fair	fair	JJ	p2=NN	37	amod	_
37	Earth	earth	NNP	_	34	dobj	34:A1=LOC
38	since	since	IN	_	34	prep	28:AM-TMP;34:AM-TMP
39	the	the	DT	_	40	det	_
40	1970s	0s	NNS	p2=NNPS	38	pobj	_
41	.	.	.	_	34	punct	_

1	While	while	IN	_	5	mark	_
2	Google	google	NNP	_	5	nsubj	_
3	was	be	VBD	_	5	aux	_
4	obviously	obviously	RB	_	5	advmod	5:AM-ADV
5	going	go	VBG	pb=go.06	12	advcl	12:AM-ADV
6	for	for	IN	_	5	prep	5:A1=PPT
7	warm	warm	JJ	_	9	amod	_
8	fuzzy	fuzzy	JJ	_	9	amod	_
9	nostalgia	nostalgia	NN	_	6	pobj	_
10	,	,	,	_	12	punct	_
11	I	I	PRP	_	12	nsubj	12:A0
12	thought	think	VBD	pb=think.01	0	root	_
13	it	it	PRP	_	14	nsubj	_
14	was	be	VBD	pb=be.01	12	ccomp	12:A1=PPT
15	rather	rather	RB	_	16	advmod	_
16	cruel	cruel	JJ	_	14	acomp	14:A2=PRD
17	to	to	TO	_	18	aux	_
18	remind	remind	VB	pb=remind.01	14	xcomp	14:A1=PPT
19	tens	#crd#	NNS	_	21	quantmod	_
20	of	of	IN	_	21	quantmod	_
21	millions	#crd#	NNS	_	18	dobj	18:A2=GOL
22	of	of	IN	_	21	prep	_
23	people	people	NNS	_	22	pobj	_
24	of	of	IN	_	23	prep	_
25	their	their	PRP$	_	27	poss	_
26	intellectual	intellectual	JJ	_	27	amod	_
27	inferiority	inferiority	NN	_	24	pobj	_
28	with	with	IN	_	18	prep	18:A1=PPT
29	a	a	DT	_	31	det	_
30	playable	playable	JJ	p2=NN	31	nn	_
31	Rubik	rubik	NNP	p2=NN	34	poss	_
32	's	's	POS	_	31	possessive	_
33	Cube	cube	NNP	_	34	nn	_
34	Doodle	doodle	NNP	_	28	pobj	_
35	.	.	.	_	12	punct	_

1	As	as	IN	_	17	prep	17:AM-PRD
2	one	#crd#	CD	_	1	pobj	_
3	of	of	IN	_	2	prep	_
4	the	the	DT	_	6	det	_
5	few	few	JJ	_	6	amod	_
6	people	people	NNS	_	3	pobj	10:A0=PAG
7	who	who	WP	_	10	nsubj	10:R-A0
8	can	can	MD	_	10	aux	10:AM-MOD
9	actually	actually	RB	_	10	advmod	10:AM-ADV
10	solve	solve	VB	pb=solve.01	6	rcmod	_
11	a	a	DT	_	12	det	_
12	Rubik	rubik	NNP	_	14	poss	_
13	's	's	POS	_	12	possessive	_
14	Cube	cube	NNP	_	10	dobj	10:A1=PPT
15	,	,	,	_	17	punct	_
16	I	I	PRP	_	17	nsubj	17:A0=PAG
17	feel	feel	VBP	pb=feel.02	0	root	_
18	like	like	IN	_	20	mark	_
19	it	it	PRP	_	20	nsubj	_
20	's	be	VBZ	pb=be.01	17	advcl	17:A1=PPT
21	my	my	PRP$	_	22	poss	_
22	duty	duty	NN	_	20	attr	20:A2=PRD
23	to	to	TO	_	24	aux	_
24	give	give	VB	pb=give.01	20	xcomp	20:A1=PPT
25	you	you	PRP	_	24	iobj	24:A2=GOL
26	some	some	DT	_	27	det	_
27	tips	tip	NNS	_	24	dobj	24:A1=PPT
28	on	on	IN	_	27	prep	_
29	how	how	WRB	_	32	advmod	32:R-AM-MNR
30	to	to	TO	_	32	aux	_
31	finally	finally	RB	_	32	advmod	32:AM-TMP
32	solve	solve	VB	pb=solve.01	28	pcomp	_
33	the	the	DT	_	37	det	_
34	three	#crd#	CD	_	36	hmod	_
35	-	-	HYPH	_	36	hyph	_
36	dimensional	dimensional	JJ	_	37	amod	_
37	puzzle	puzzle	NN	_	32	dobj	41:A0=PAG;32:A1=PPT
38	that	that	WDT	_	41	nsubj	41:R-A0
39	has	have	VBZ	_	41	aux	_
40	probably	probably	RB	_	41	advmod	41:AM-ADV
41	tormented	torment	VBN	pb=torment.01	37	rcmod	_
42	you	you	PRP	_	41	dobj	41:A1=PPT
43	since	since	IN	_	41	prep	41:AM-TMP
44	childhood	childhood	NN	_	43	pobj	_
45	.	.	.	_	17	punct	_

1	Read	read	VB	p2=RB|pb=read.01	0	root	_
2	on	on	RP	p2=RB	1	prt	1:C-V
3	,	,	,	_	1	punct	_
4	for	for	IN	_	1	prep	1:AM-PRP
5	how	how	WRB	_	7	advmod	7:R-AM-MNR
6	to	to	TO	_	7	aux	_
7	solve	solve	VB	pb=solve.01	4	pcomp	_
8	Google	google	NNP	_	10	poss	_
9	's	's	POS	_	8	possessive	_
10	Rubik	rubik	NNP	_	13	poss	_
11	's	's	POS	_	10	possessive	_
12	Cube	cube	NNP	_	13	nn	_
13	Doodle	doodle	NNP	_	7	dobj	7:A1=PPT
14	.	.	.	_	1	punct	_

1	From	from	IN	_	10	prep	10:AM-ADV
2	the	the	DT	_	3	det	_
3	outset	outset	NN	_	1	pobj	_
4	,	,	,	_	10	punct	_
5	the	the	DT	_	6	det	_
6	Rubik	rubik	NNP	_	8	poss	_
7	's	's	POS	_	6	possessive	_
8	Cube	cube	NNP	_	10	nsubj	10:A0=PPT
9	just	just	RB	_	10	advmod	10:AM-ADV
10	looks	look	VBZ	pb=look.01	0	root	_
11	down	down	RP	p2=RB	10	prt	10:AM-DIR
12	right	right	JJ	p2=RB	13	amod	_
13	intimidating	intimidating	NN	p2=VBG	10	dobj	10:A1=GOL
14	.	.	.	_	10	punct	_

1	It	it	PRP	_	2	nsubj	2:A0=PAG
2	looks	look	VBZ	pb=look.02	0	root	_
3	like	like	IN	_	5	mark	_
4	there	there	EX	_	5	expl	_
5	are	be	VBP	pb=be.02	2	advcl	2:A1=PPT
6	six	#crd#	CD	_	8	num	_
7	different	different	JJ	_	8	amod	_
8	sides	side	NNS	_	5	attr	5:A1=PPT;10:A1=PRD
9	,	,	,	_	8	punct	_
10	composed	compose	VBN	pb=compose.01	8	partmod	_
11	of	of	IN	_	10	prep	10:A2=VSP
12	54	0	CD	_	14	num	_
13	colored	colored	JJ	p2=VBN	14	amod	_
14	tiles	tile	NNS	_	11	pobj	18:A1=PPT;20:A1
15	that	that	WDT	_	18	nsubjpass	18:R-A1;20:R-A1
16	can	can	MD	_	18	aux	18:AM-MOD;20:AM-MOD
17	be	be	VB	_	18	auxpass	_
18	moved	move	VBN	pb=move.01	14	rcmod	_
19	and	and	CC	_	18	cc	_
20	rotated	rotate	VBN	p2=VBD|pb=rotate.02	18	conj	_
21	in	in	IN	_	20	prep	20:AM-LOC
22	an	an	DT	_	25	det	_
23	almost	almost	RB	_	24	advmod	_
24	infinite	infinite	JJ	_	25	amod	_
25	number	number	NN	_	21	pobj	_
26	of	of	IN	_	25	prep	_
27	ways	way	NNS	_	26	pobj	_
28	.	.	.	_	2	punct	_

1	In	in	IN	_	8	prep	8:AM-LOC
2	reality	reality	NN	_	1	pobj	_
3	,	,	,	_	8	punct	_
4	a	a	DT	_	5	det	_
5	Rubik	rubik	NNP	_	7	poss	_
6	's	's	POS	_	5	possessive	_
7	Cube	cube	NNP	_	8	nsubj	8:A1=PPT
8	is	be	VBZ	pb=be.01	0	root	_
9	actually	actually	RB	_	8	advmod	8:AM-ADV
10	much	much	RB	_	11	advmod	_
11	simpler	simple	JJR	_	8	acomp	8:A2=PRD
12	.	.	.	_	8	punct	_

1	There	there	EX	_	2	expl	_
2	are	be	VBP	pb=be.02	0	root	_
3	eight	#crd#	CD	_	5	num	_
4	corner	corner	NN	_	5	nn	_
5	pieces	piece	NNS	_	2	attr	2:A1=PPT;11:A1=PPT
6	,	,	,	_	5	punct	_
7	which	which	WDT	_	11	nsubjpass	11:R-A1
8	can	can	MD	_	11	aux	11:AM-MOD
9	only	only	RB	_	11	advmod	11:AM-ADV
10	be	be	VB	_	11	auxpass	_
11	moved	move	VBN	pb=move.01	5	rcmod	_
12	from	from	IN	_	11	prep	11:AM-DIR
13	corner	corner	NN	_	12	pobj	_
14	to	to	IN	_	11	prep	11:A2=GOL
15	corner	corner	NN	_	14	pobj	_
16	.	.	.	_	2	punct	_

1	There	there	EX	_	2	expl	_
2	are	be	VBP	pb=be.02	0	root	_
3	12	0	CD	_	5	num	_
4	edge	edge	NN	_	5	nn	_
5	pieces	piece	NNS	_	2	attr	2:A1=PPT;11:A1=PPT
6	,	,	,	_	5	punct	_
7	which	which	WDT	_	11	nsubjpass	11:R-A1
8	can	can	MD	_	11	aux	11:AM-MOD
9	only	only	RB	_	11	advmod	11:AM-ADV
10	be	be	VB	_	11	auxpass	_
11	moved	move	VBN	pb=move.01	5	rcmod	_
12	from	from	IN	_	11	prep	11:AM-DIR
13	edge	edge	NN	_	12	pobj	_
14	to	to	IN	_	11	prep	11:A2=GOL
15	edge	edge	NN	_	14	pobj	_
16	.	.	.	_	2	punct	_

1	And	and	CC	_	3	cc	3:AM-DIS
2	there	there	EX	_	3	expl	_
3	are	be	VBP	pb=be.02	0	root	_
4	six	#crd#	CD	_	6	num	_
5	central	central	JJ	_	6	amod	_
6	pieces	piece	NNS	_	3	attr	3:A1=PPT;10:A1=PPT
7	that	that	WDT	_	10	nsubjpass	10:R-A1
8	can	can	MD	_	10	aux	10:AM-MOD
9	be	be	VB	_	10	auxpass	_
10	rotated	rotate	VBN	p2=JJ|pb=rotate.02	6	rcmod	_
11	in-place	in-place	JJ	p2=NN	10	oprd	_
12	,	,	,	_	3	punct	_
13	but	but	CC	_	3	cc	_
14	never	never	RB	_	15	neg	15:AM-NEG
15	moved	move	VBD	p2=VBN|pb=move.01	3	conj	_
16	.	.	.	_	3	punct	_

1	This	this	DT	_	2	nsubj	2:A0=PAG
2	means	mean	VBZ	pb=mean.01	0	root	_
3	that	that	IN	_	7	complm	_
4	each	each	DT	_	5	det	_
5	face	face	NN	_	7	nsubj	7:A0=PAG
6	always	always	RB	_	7	advmod	7:AM-TMP
7	has	have	VBZ	pb=have.03	2	ccomp	2:A1=PPT
8	a	a	DT	_	10	det	_
9	predesignated	predesignated	JJ	p2=VBN	10	amod	_
10	color	color	NN	_	7	dobj	7:A1=PPT
11	,	,	,	_	7	punct	_
12	and	and	CC	_	7	cc	_
13	that	that	IN	_	17	mark	_
14	the	the	DT	_	16	det	_
15	white	white	JJ	_	16	amod	_
16	side	side	NN	_	17	nsubj	17:A1=PPT
17	is	be	VBZ	pb=be.01	7	conj	_
18	always	always	RB	_	17	advmod	17:AM-TMP
19	next	next	JJ	p2=RB	17	acomp	17:A2=PRD
20	to	to	IN	_	19	prep	_
21	the	the	DT	_	23	det	_
22	orange	orange	JJ	p2=NN	23	amod	_
23	side	side	NN	_	20	pobj	_
24	(	(	-LRB-	_	23	punct	_
25	for	for	IN	_	23	prep	_
26	example	example	NN	_	25	pobj	_
27	)	)	-RRB-	_	17	punct	_
28	.	.	.	_	2	punct	_

1	It	it	PRP	_	3	nsubj	3:A0=PAG
2	also	also	RB	_	3	advmod	3:AM-DIS
3	means	mean	VBZ	pb=mean.01	0	root	_
4	each	each	DT	p2=NN	3	dobj	3:A1=PPT
5	of	of	IN	_	4	prep	_
6	the	the	DT	_	8	det	_
7	six	#crd#	CD	p2=NN	8	num	_
8	faces	face	NNS	_	5	pobj	_
9	can	can	MD	_	10	aux	10:AM-MOD
10	have	have	VB	pb=have.03	3	ccomp	_
11	a	a	DT	_	13	det	_
12	fixed	fix	VBN	pb=fix.03	13	amod	_
13	designation	designation	NN	_	10	dobj	10:A1=PPT;12:A1=PPT
14	(	(	-LRB-	_	13	punct	_
15	up	up	RB	p2=RP	10	advmod	_
16	,	,	,	_	10	punct	_
17	down	down	RB	p2=IN	10	advmod	10:AM-ADV
18	,	,	,	_	10	punct	_
19	front	front	NN	p2=JJ	10	conj	_
20	,	,	,	_	19	punct	_
21	back	back	RB	p2=NN	19	advmod	_
22	,	,	,	_	19	punct	_
23	left	leave	VBN	p2=VBD|pb=leave.06	19	conj	_
24	,	,	,	_	23	punct	_
25	right	right	UH	p2=RB	23	intj	23:AM-DIS
26	)	)	-RRB-	_	3	punct	_
27	.	.	.	_	3	punct	_

1	If	if	IN	_	7	mark	_
2	the	the	DT	_	5	det	_
3	orange	orange	JJ	p2=NN	5	amod	_
4	center	center	NN	_	5	nn	_
5	piece	piece	NN	_	7	nsubj	7:A0=PAG
6	is	be	VBZ	_	7	aux	_
7	facing	face	VBG	pb=face.01	17	advcl	17:AM-ADV
8	upwards	upwards	RB	_	7	advmod	7:AM-DIR
9	,	,	,	_	17	punct	_
10	then	then	RB	_	17	advmod	17:AM-ADV
11	the	the	DT	_	15	det	_
12	opposing	oppose	VBG	p2=JJ|pb=oppose.01	15	amod	_
13	red	red	JJ	_	14	amod	_
14	center	center	NN	_	15	nn	_
15	piece	piece	NN	_	17	nsubj	17:A0=PAG;12:A1=PPT
16	is	be	VBZ	_	17	aux	_
17	facing	face	VBG	pb=face.01	32	ccomp	_
18	downwards	downwards	RB	p2=NNS	20	hmod	_
19	-	-	HYPH	p2=:	20	hyph	_
20	likewise	likewise	RB	_	17	advmod	17:AM-MNR
21	,	,	,	_	32	punct	_
22	if	if	IN	_	26	mark	_
23	the	the	DT	_	25	det	_
24	front	front	JJ	_	25	amod	_
25	face	face	NN	_	26	nsubj	26:A1=PPT
26	is	be	VBZ	pb=be.01	32	advcl	32:AM-ADV
27	white	white	JJ	_	26	acomp	26:A2=PRD
28	,	,	,	_	32	punct	_
29	then	then	RB	_	32	advmod	32:AM-ADV
30	the	the	DT	_	31	det	_
31	back	back	NN	p2=RB	32	nsubj	32:A1=PPT
32	is	be	VBZ	pb=be.01	0	root	_
33	yellow	yellow	JJ	_	32	acomp	32:A2=PRD
34	.	.	.	_	32	punct	_

1	It	it	PRP	_	2	nsubj	_
2	's	be	VBZ	pb=be.01	0	root	_
3	useful	useful	JJ	_	2	acomp	2:A2=PRD
4	to	to	TO	_	5	aux	_
5	try	try	VB	pb=try.01	2	xcomp	2:A1=PPT
6	and	and	CC	_	5	cc	_
7	keep	keep	VB	pb=keep.04	5	conj	_
8	each	each	DT	_	12	det	_
9	face	face	NN	p2=VBP	12	nn	_
10	/	/	SYM	p2=,	12	punct	_
11	color	color	NN	_	12	nn	_
12	combination	combination	NN	_	7	dobj	7:A1=PPT
13	in	in	IN	_	7	prep	7:A2=PPT
14	your	your	PRP$	_	15	poss	_
15	head	head	NN	_	13	pobj	_
16	.	.	.	_	2	punct	_

1	To	to	TO	_	2	aux	_
2	solve	solve	VB	pb=solve.01	10	advcl	10:AM-PRP
3	the	the	DT	_	8	det	_
4	first	#ord#	JJ	_	8	amod	_
5	Rubik	rubik	NNP	p2=NNPS	8	poss	_
6	's	's	POS	_	5	possessive	_
7	Cube	cube	NNP	_	8	nn	_
8	face	face	NN	p2=VBP	2	dobj	2:A1=PPT
9	,	,	,	_	10	punct	_
10	pick	pick	VB	pb=pick.01	0	root	_
11	one	#crd#	CD	_	12	num	_
12	color	color	NN	_	10	dobj	10:A1=PPT;14:A1=PPT
13	to	to	TO	_	14	aux	_
14	be	be	VB	pb=be.01	10	advcl	10:A2=DIR
15	"	"	``	_	14	punct	_
16	up	up	RP	p2=IN	14	advmod	14:A2=PRD
17	"	"	''	_	14	punct	_
18	or	or	CC	_	14	cc	_
19	"	"	``	_	20	punct	_
20	top	top	JJ	p2=NN	14	conj	_
21	.	.	.	_	10	punct	_
22	"	"	''	_	10	punct	_

1	In	in	IN	_	9	prep	9:AM-LOC
2	the	the	DT	_	3	det	_
3	video	video	NN	_	1	pobj	_
4	above	above	IN	p2=RB	3	prep	_
5	(	(	-LRB-	p2=NN	9	punct	_
6	which	which	WDT	_	9	dobj	10:R-A1
7	I	I	PRP	_	9	nsubj	9:A0=PAG;10:A0
8	highly	highly	RB	_	9	advmod	9:AM-MNR
9	recommend	recommend	VBP	pb=recommend.01	14	ccomp	_
10	watching	watch	VBG	p2=NN|pb=watch.01	9	xcomp	9:A1=PPT
11	)	)	-RRB-	_	9	punct	_
12	,	,	,	_	14	punct	_
13	orange	orange	NN	p2=PRP	14	nsubj	14:A1=PPT
14	is	be	VBZ	pb=be.01	0	root	_
15	the	the	DT	_	17	det	_
16	top	top	JJ	_	17	amod	_
17	color	color	NN	_	14	attr	14:A2=PRD
18	.	.	.	_	14	punct	_

1	For	for	IN	_	10	prep	10:AM-PRP
2	the	the	DT	_	4	det	_
3	first	#ord#	JJ	_	4	amod	_
4	face	face	NN	_	1	pobj	_
5	,	,	,	_	10	punct	_
6	most	most	JJS	_	7	amod	_
7	moves	move	NNS	_	10	nsubj	10:A0=PAG
8	will	will	MD	_	10	aux	10:AM-MOD
9	only	only	RB	_	10	advmod	10:AM-ADV
10	require	require	VB	pb=require.01	0	root	_
11	one	#crd#	CD	_	14	num	_
12	or	or	CC	_	11	cc	_
13	two	#crd#	CD	_	11	conj	_
14	turns	turn	NNS	p2=VBZ	10	dobj	10:A1=PPT
15	,	,	,	_	10	punct	_
16	to	to	TO	p2=IN	18	aux	_
17	"	"	``	_	18	punct	_
18	flip	flip	VB	pb=flip.01	10	advcl	_
19	"	"	''	_	18	punct	_
20	the	the	DT	_	21	det	_
21	colors	color	NNS	_	18	dobj	18:A1=PPT
22	of	of	IN	_	21	prep	_
23	an	an	DT	_	24	det	_
24	edge	edge	NN	_	27	nn	_
25	or	or	CC	_	24	cc	_
26	corner	corner	NN	_	24	conj	_
27	piece	piece	NN	_	22	pobj	_
28	.	.	.	_	10	punct	_

1	As	as	IN	_	4	mark	_
2	you	you	PRP	_	4	nsubj	4:A0
3	can	can	MD	_	4	aux	4:AM-MOD
4	see	see	VB	pb=see.01	12	advcl	12:AM-ADV
5	in	in	IN	_	4	prep	4:AM-LOC
6	the	the	DT	_	7	det	_
7	video	video	NN	_	5	pobj	_
8	above	above	IN	p2=RB	7	advmod	_
9	,	,	,	_	12	punct	_
10	this	this	DT	_	12	nsubj	12:A2=PPT
11	normally	normally	RB	_	12	advmod	12:AM-ADV
12	involves	involve	VBZ	pb=involve.01	0	root	_
13	twisting	twist	VBG	pb=twist.01	12	xcomp	12:A1=PPT
14	the	the	DT	_	15	det	_
15	side	side	NN	_	13	dobj	13:A1
16	away	away	RB	_	13	advmod	13:AM-DIR
17	from	from	IN	_	16	prep	_
18	the	the	DT	_	19	det	_
19	top	top	NN	p2=JJ	17	pobj	_
20	,	,	,	_	13	punct	_
21	making	make	VBG	pb=make.02	13	conj	_
22	another	another	DT	_	24	det	_
23	perpendicular	perpendicular	JJ	_	24	amod	_
24	twist	twist	NN	_	21	dobj	21:A1=PRD
25	to	to	TO	p2=IN	26	aux	_
26	flip	flip	VB	pb=flip.01	21	advcl	21:AM-PRP
27	the	the	DT	_	28	det	_
28	piece	piece	NN	_	26	dobj	26:A1=PPT
29	,	,	,	_	21	punct	_
30	and	and	CC	_	21	cc	_
31	then	then	RB	_	32	advmod	32:AM-TMP
32	twisting	twist	VBG	pb=twist.01	21	conj	_
33	the	the	DT	_	34	det	_
34	side	side	NN	_	32	dobj	32:A1
35	back	back	RB	_	32	advmod	32:AM-DIR
36	towards	towards	IN	_	35	prep	_
37	the	the	DT	_	38	det	_
38	top	top	NN	p2=JJ	36	pobj	_
39	.	.	.	_	12	punct	_

1	At	at	IN	_	7	prep	7:AM-TMP
2	this	this	DT	_	3	det	_
3	point	point	NN	_	1	pobj	_
4	,	,	,	_	7	punct	_
5	I	I	PRP	_	7	nsubj	7:A0=PAG
6	should	should	MD	_	7	aux	7:AM-MOD
7	tell	tell	VB	pb=tell.01	0	root	_
8	you	you	PRP	_	7	dobj	7:A2=GOL
9	that	that	IN	_	11	complm	_
10	there	there	EX	_	11	expl	_
11	are	be	VBP	pb=be.02	7	ccomp	7:A1=PPT
12	lots	lot	NNS	_	11	attr	11:A1=PPT
13	of	of	IN	_	12	prep	_
14	different	different	JJ	_	15	amod	_
15	ways	way	NNS	_	13	pobj	_
16	of	of	IN	_	15	prep	_
17	solving	solve	VBG	pb=solve.01	16	pcomp	_
18	a	a	DT	_	19	det	_
19	Rubik	rubik	NNP	_	21	poss	_
20	's	's	POS	_	19	possessive	_
21	Cube	cube	NNP	_	17	dobj	17:A1=PPT
22	.	.	.	_	7	punct	_

1	I	I	PRP	_	2	nsubj	2:A0=PAG
2	suggest	suggest	VBP	pb=suggest.01	0	root	_
3	you	you	PRP	_	4	nsubj	4:A0=PAG;5:A0=PAG
4	try	try	VB	p2=VBP|pb=try.01	2	ccomp	2:A1=PPT
5	following	follow	VBG	pb=follow.02	4	xcomp	4:A1=PPT
6	the	the	DT	_	7	det	_
7	video	video	NN	_	5	dobj	5:A1=PPT
8	above	above	IN	p2=RB	5	prep	5:A2=GOL
9	for	for	IN	_	5	prep	5:AM-PRP
10	your	your	PRP$	_	12	poss	_
11	first	#ord#	JJ	_	12	amod	_
12	attempt	attempt	NN	_	9	pobj	_
13	-	-	:	p2=,	12	punct	_
14	but	but	CC	_	2	cc	_
15	you	you	PRP	_	17	nsubj	19:A0=PAG
16	may	may	MD	_	17	aux	17:AM-MOD
17	have	have	VB	pb=have.02	2	conj	_
18	to	to	TO	_	19	aux	_
19	do	do	VB	pb=do.02	17	xcomp	_
20	a	a	DT	_	21	det	_
21	lot	lot	NN	_	19	dobj	19:A1=PPT
22	of	of	IN	_	21	prep	_
23	pausing	pausing	NN	p2=VBG	22	pobj	_
24	,	,	,	_	17	punct	_
25	while	while	IN	_	27	mark	_
26	you	you	PRP	_	27	nsubj	27:A0=PAG;29:A0=PAG
27	try	try	VBP	pb=try.01	17	advcl	17:AM-TMP
28	to	to	TO	_	29	aux	_
29	assimilate	assimilate	VB	pb=assimilate.01	27	xcomp	27:A1=PPT
30	all	all	DT	_	29	dobj	29:A1=PPT
31	of	of	IN	_	30	prep	_
32	the	the	DT	_	33	det	_
33	data	datum	NNS	p2=NN	31	pobj	_
34	.	.	.	_	17	punct	_

1	Once	once	IN	p2=RB	4	mark	_
2	he	he	PRP	_	4	nsubj	4:A0
3	starts	start	VBZ	_	4	aux	_
4	making	make	VBG	pb=make.LV	12	advcl	_
5	more	more	JJR	p2=RBR	6	advmod	_
6	complex	complex	JJ	_	7	amod	_
7	moves	move	NNS	_	4	dobj	4:AM-PRR
8	,	,	,	_	12	punct	_
9	you	you	PRP	_	12	nsubj	12:A0=PAG;14:A0=PAG
10	will	will	MD	_	12	aux	12:AM-MOD
11	definitely	definitely	RB	_	12	advmod	12:AM-ADV
12	want	want	VB	pb=want.01	0	root	_
13	to	to	TO	_	14	aux	_
14	pause	pause	VB	pb=pause.01	12	xcomp	12:A1=PPT
15	a	a	DT	_	16	det	_
16	lot	lot	NN	_	14	dobj	14:AM-EXT
17	,	,	,	_	16	punct	_
18	or	or	CC	_	12	cc	_
19	else	else	RB	_	18	advmod	_
20	you	you	PRP	_	23	nsubjpass	22:A1=PPT;23:A1=PPT
21	'll	will	MD	_	23	aux	22:AM-MOD;23:AM-MOD
22	get	get	VB	pb=get.03	23	auxpass	_
23	lost	lose	VBN	pb=lose.02	12	conj	22:A2=GOL
24	very	very	RB	_	25	advmod	_
25	quickly	quickly	RB	_	23	advmod	22:AM-MNR;23:AM-MNR
26	.	.	.	_	23	punct	_

1	Another	another	DT	_	2	det	_
2	alternative	alternative	NN	_	3	nsubj	3:A1=PPT
3	is	be	VBZ	pb=be.01	0	root	_
4	to	to	TO	_	5	aux	_
5	follow	follow	VB	pb=follow.02	3	xcomp	3:A2=PRD
6	a	a	DT	_	8	det	_
7	written	write	VBN	pb=write.01	8	amod	_
8	guide	guide	NN	_	5	dobj	5:A1=PPT;7:A1=PPT
9	,	,	,	_	5	punct	_
10	with	with	IN	_	5	prep	5:AM-MNR
11	diagrams	diagram	NNS	_	10	pobj	_
12	.	.	.	_	3	punct	_

1	RuWix	ruwix	NNP	p2=NN	2	nsubj	2:A0=PAG
2	has	have	VBZ	pb=have.03	0	root	_
3	a	a	DT	_	5	det	_
4	good	good	JJ	_	5	amod	_
5	guide	guide	NN	_	2	dobj	2:A1=PPT
6	,	,	,	_	2	punct	_
7	along	along	IN	_	2	prep	_
8	with	with	IN	_	7	prep	_
9	lots	lot	NNS	_	8	pobj	_
10	of	of	IN	_	9	prep	_
11	other	other	JJ	_	13	amod	_
12	useful	useful	JJ	_	13	amod	_
13	tools	tool	NNS	_	10	pobj	_
14	.	.	.	_	2	punct	_

1	 HowToCube	 howtocube	NNP	p2=VB	2	nsubj	2:A0
2	has 	has 	VBZ	p2=VBD|pb=has .01	0	root	_
3	another	another	DT	_	5	det	_
4	good	good	JJ	_	5	amod	_
5	guide	guide	NN	_	2	dobj	2:A1
6	,	,	,	_	5	punct	_
7	complete	complete	JJ	_	5	amod	_
8	with	with	IN	_	7	prep	_
9	easy	easy	JJ	p2=NN	13	hmod	_
10	-	-	HYPH	_	13	hyph	_
11	to	to	TO	_	13	aux	_
12	-	-	HYPH	_	13	hyph	_
13	follow	follow	VB	pb=follow.02	14	amod	_
14	animations	animation	NNS	_	8	pobj	_
15	.	.	.	_	2	punct	_

1	 If	 if	IN	p2=UH	3	mark	_
2	you	you	PRP	_	3	nsubj	3:A1=PPT
3	get	get	VBP	pb=get.03	9	advcl	9:AM-ADV
4	really	really	RB	_	5	advmod	_
5	stuck	stuck	JJ	p2=VBN	3	acomp	3:A2=GOL
6	,	,	,	_	9	punct	_
7	you	you	PRP	_	9	nsubj	9:A0=PAG
8	can	can	MD	_	9	aux	9:AM-MOD
9	use	use	VB	pb=use.01	0	root	_
10	the	the	DT	_	12	det	_
11	online	online	JJ	p2=NN	12	nn	_
12	Rubik	rubik	NNP	p2=NN	15	poss	_
13	's	's	POS	_	12	possessive	_
14	Cube	cube	NNP	_	15	nn	_
15	solver	solver	NN	p2=NNP	9	dobj	9:A1=PPT
16	,	,	,	_	15	punct	_
17	where	where	WRB	_	20	advmod	20:R-AM-LOC
18	you	you	PRP	_	20	nsubj	20:A0=PAG
19	can	can	MD	_	20	aux	20:AM-MOD
20	input	input	VB	pb=input.01	15	rcmod	_
21	your	your	PRP$	_	22	poss	_
22	cube	cube	NN	_	24	poss	_
23	's	's	POS	_	22	possessive	_
24	colors	color	NNS	_	20	dobj	20:A1=PPT
25	,	,	,	_	9	punct	_
26	and	and	CC	_	9	cc	_
27	then	then	RB	_	29	advmod	29:AM-TMP
28	it	it	PRP	_	29	nsubj	29:A0=PAG
29	generates	generate	VBZ	pb=generate.01	9	conj	_
30	a	a	DT	_	31	det	_
31	list	list	NN	_	29	dobj	29:A1=PPT
32	of	of	IN	_	31	prep	_
33	moves	move	NNS	_	32	pobj	_
34	to	to	TO	_	35	aux	_
35	solve	solve	VB	pb=solve.01	33	infmod	_
36	it	it	PRP	_	35	dobj	35:A1=PPT
37	.	.	.	_	29	punct	_

1	Eventually	eventually	RB	_	22	advmod	_
2	,	,	,	_	22	punct	_
3	if	if	IN	_	5	mark	_
4	you	you	PRP	_	5	nsubj	5:A0=PAG;7:A0=PAG
5	want	want	VBP	pb=want.01	22	advcl	_
6	to	to	TO	_	7	aux	_
7	proceed	proceed	VB	pb=proceed.01	5	xcomp	5:A1=PPT
8	beyond	beyond	IN	_	7	prep	7:A1=PPT
9	the	the	DT	_	11	det	_
10	upper	upper	JJ	_	11	amod	_
11	face	face	NN	_	8	pobj	_
12	and	and	CC	_	11	cc	_
13	a	a	DT	_	18	det	_
14	few	few	JJ	_	18	amod	_
15	second	#ord#	JJ	_	17	hmod	_
16	-	-	HYPH	_	17	hyph	_
17	level	level	NN	_	18	nn	_
18	pieces	piece	NNS	_	11	conj	_
19	,	,	,	_	22	punct	_
20	you	you	PRP	_	22	nsubj	26:A0=PAG;27:A0
21	're	be	VBP	_	22	aux	_
22	going	go	VBG	pb=go.04	0	root	_
23	to	to	TO	_	24	aux	_
24	have	have	VB	pb=have.02	22	xcomp	_
25	to	to	TO	_	26	aux	_
26	start	start	VB	pb=start.01	24	xcomp	_
27	thinking	think	VBG	pb=think.01	26	xcomp	26:A1=PPT
28	algorithmically	algorithmically	RB	_	30	hmod	_
29	-	-	HYPH	_	30	hyph	_
30	fixed	fix	VBN	p2=JJ	31	amod	_
31	sets	set	NNS	_	27	dobj	27:A1=PPT
32	of	of	IN	_	31	prep	_
33	moves	move	NNS	_	32	pobj	35:A0=PAG
34	that	that	WDT	_	35	nsubj	35:R-A0
35	move	move	VBP	pb=move.01	33	rcmod	_
36	pieces	piece	NNS	_	35	dobj	35:A1=PPT
37	from	from	IN	_	35	prep	35:AM-DIR
38	one	#crd#	CD	_	39	num	_
39	side	side	NN	_	37	pobj	_
40	to	to	IN	_	35	prep	35:A2=GOL
41	the	the	DT	_	42	det	_
42	other	other	JJ	_	40	pobj	_
43	,	,	,	_	27	punct	_
44	without	without	IN	_	27	prep	_
45	disrupting	disrupt	VBG	pb=disrupt.01	44	pcomp	_
46	the	the	DT	_	47	det	_
47	pieces	piece	NNS	_	45	dobj	45:A1=PPT;49:A1=PPT
48	that	that	WDT	_	49	nsubj	49:R-A1
49	are	be	VBP	pb=be.01	47	rcmod	_
50	already	already	RB	_	49	advmod	49:AM-TMP
51	in	in	IN	_	49	prep	49:A2=PRD
52	the	the	DT	_	54	det	_
53	right	right	JJ	_	54	amod	_
54	place	place	NN	_	51	pobj	_
55	.	.	.	_	22	punct	_

1	This	this	DT	_	2	nsubj	2:A1=PPT
2	is	be	VBZ	pb=be.01	0	root	_
3	where	where	WRB	_	4	advmod	4:R-AM-LOC
4	solving	solve	VBG	pb=solve.01	2	advcl	2:A2=PRD
5	a	a	DT	_	6	det	_
6	Rubik	rubik	NNP	_	8	poss	_
7	's	's	POS	_	6	possessive	_
8	Cube	cube	NNP	_	4	dobj	4:A1=PPT;10:A1=PPT
9	actually	actually	RB	_	10	advmod	10:AM-ADV
10	gets	get	VBZ	pb=get.01	4	advcl	_
11	hard	hard	RB	p2=JJ	10	advmod	10:A2=DIR
12	,	,	,	_	2	punct	_
13	and	and	CC	_	2	cc	_
14	where	where	WRB	_	18	advmod	_
15	you	you	PRP	_	18	nsubj	18:A0=PAG;20:A0=PAG;24:A0
16	'll	will	MD	_	18	aux	18:AM-MOD
17	definitely	definitely	RB	_	18	advmod	18:AM-ADV
18	want	want	VB	pb=want.01	2	conj	_
19	to	to	TO	_	20	aux	_
20	read	read	VB	pb=read.01	18	xcomp	18:A1=PPT
21	a	a	DT	_	22	det	_
22	guide	guide	NN	_	20	dobj	20:A1=PPT
23	or	or	CC	_	20	cc	_
24	watch	watch	VB	pb=watch.01	20	conj	_
25	a	a	DT	_	26	det	_
26	video	video	NN	_	24	dobj	24:A1
27	.	.	.	_	18	punct	_

1	I	I	PRP	_	2	nsubj	2:A0=PAG
2	suggest	suggest	VBP	pb=suggest.01	0	root	_
3	you	you	PRP	_	4	nsubj	4:A1=PPT
4	stick	stick	VBP	p2=NN|pb=stick.01	2	ccomp	2:A1=PPT
5	with	with	IN	_	4	prep	4:A2=GOL
6	one	#crd#	CD	_	7	num	_
7	guide	guide	NN	p2=VB	5	pobj	_
8	for	for	IN	_	4	prep	4:AM-TMP
9	at	at	RB	p2=IN	10	advmod	_
10	least	least	RBS	_	11	advmod	_
11	30	0	CD	_	12	num	_
12	minutes	minute	NNS	_	8	pobj	_
13	before	before	IN	p2=RB	7	prep	_
14	giving	give	VBG	pb=give.07	13	pcomp	_
15	up	up	RP	_	14	prt	14:C-V
16	and	and	CC	_	14	cc	_
17	moving	move	VBG	pb=move.01	14	conj	_
18	to	to	IN	_	17	prep	17:A2=GOL
19	another	another	DT	_	21	hmod	_
20	-	-	HYPH	p2=,	21	hyph	_
21	mixing	mix	VBG	p2=NN	18	pobj	_
22	and	and	CC	_	21	cc	_
23	matching	match	VBG	pb=match.01	21	conj	_
24	guides	guide	NNS	_	23	dobj	23:A1=PPT
25	will	will	MD	_	27	aux	27:AM-MOD
26	likely	likely	RB	p2=JJ	27	advmod	27:AM-ADV
27	result	result	VB	pb=result.01	2	ccomp	_
28	in	in	IN	_	27	prep	27:A2=LOC
29	lots	lot	NNS	_	28	pobj	_
30	of	of	IN	_	29	prep	_
31	frustration	frustration	NN	_	30	pobj	_
32	.	.	.	_	2	punct	_

1	Most	most	JJS	_	2	amod	_
2	guides	guide	NNS	_	3	nsubj	3:A0=PAG
3	use	use	VBP	pb=use.01	0	root	_
4	the	the	DT	_	6	det	_
5	Singmaster	singmaster	NNP	p2=NN	6	nn	_
6	notation	notation	NN	p2=VBP	3	dobj	3:A1=PPT
7	for	for	IN	_	6	prep	_
8	describing	describe	VBG	pb=describe.01	7	pcomp	_
9	moves	move	NNS	_	8	dobj	8:A1=PPT
10	(	(	-LRB-	_	9	punct	_
11	LU'RU	lu'ru	NNP	p2=NNS	9	appos	_
12	,	,	,	_	11	punct	_
13	etc.	etc.	FW	p2=NN	11	conj	_
14	)	)	-RRB-	_	9	punct	_
15	but	but	CC	_	3	cc	_
16	I	I	PRP	_	17	nsubj	17:A0=PAG;18:A0=PAG
17	recommend	recommend	VBP	pb=recommend.01	3	conj	_
18	using	use	VBG	pb=use.01	17	xcomp	17:A1=PPT
19	Wolstenhome	wolstenhome	NNP	_	21	poss	_
20	's	's	POS	_	19	possessive	_
21	notation	notation	NN	_	18	dobj	18:A1=PPT
22	instead	instead	RB	_	18	advmod	18:AM-ADV
23	.	.	.	_	17	punct	_

1	Wolstenhome	wolstenhome	NNP	p2=DT	4	poss	_
2	's	's	POS	p2=VBZ	1	possessive	_
3	notation	notation	NN	p2=JJ	4	nn	_
4	results	result	NNS	p2=VBZ	0	root	_
5	in	in	IN	_	4	prep	_
6	moves	move	NNS	_	5	pobj	8:A1=PAG
7	that	that	WDT	p2=IN	8	nsubj	8:R-A1
8	sound	sound	VBP	pb=sound.01	6	rcmod	_
9	more	more	RBR	p2=JJR	10	advmod	_
10	like	like	IN	p2=JJ	8	prep	8:A2=PRD
11	words	word	NNS	_	10	pobj	14:A1=PPT
12	,	,	,	_	11	punct	_
13	which	which	WDT	_	14	nsubj	14:R-A1;19:R-A1
14	are	be	VBP	pb=be.01	11	rcmod	_
15	generally	generally	RB	_	14	advmod	14:AM-ADV
16	much	much	RB	_	17	advmod	_
17	easier	easy	JJR	_	14	acomp	14:A2=PRD
18	to	to	TO	_	19	aux	_
19	remember	remember	VB	pb=remember.01	17	xcomp	_
20	.	.	.	_	4	punct	_

1	In	in	IN	_	7	prep	_
2	general	general	JJ	_	1	amod	_
3	,	,	,	_	22	punct	_
4	once	once	IN	p2=RB	7	mark	_
5	you	you	PRP	_	7	nsubj	7:A0=PAG
6	've	have	VBP	_	7	aux	_
7	worked	work	VBN	pb=work.01	22	advcl	22:AM-ADV
8	out	out	RP	p2=RB	7	prt	7:C-V
9	all	all	DT	_	7	dobj	7:A1=PPT
10	of	of	IN	_	9	prep	_
11	the	the	DT	_	12	det	_
12	moves	move	NNS	_	10	pobj	_
13	(	(	-LRB-	_	7	punct	_
14	and	and	CC	_	7	cc	_
15	as	as	RB	p2=IN	16	advmod	_
16	complex	complex	JJ	_	7	conj	_
17	as	as	IN	_	19	mark	_
18	they	they	PRP	_	19	nsubj	19:A1=PAG
19	sound	sound	VBP	pb=sound.01	16	advcl	_
20	,	,	,	_	22	punct	_
21	there	there	EX	_	22	expl	_
22	are	be	VBP	pb=be.02	0	root	_
23	really	really	RB	_	22	advmod	22:AM-ADV
24	only	only	RB	_	26	advmod	_
25	a	a	DT	_	26	det	_
26	handful	handful	NN	_	22	attr	22:A1=PPT
27	of	of	IN	_	26	prep	_
28	moves	move	NNS	_	27	pobj	33:A1
29	that	that	WDT	p2=IN	33	dobj	33:R-A1
30	you	you	PRP	_	31	nsubj	31:A0=PAG;33:A0=PAG
31	need	need	VBP	pb=need.01	28	rcmod	_
32	to	to	TO	_	33	aux	_
33	memorize	memorize	VB	pb=memorize.01	31	xcomp	31:A1=PPT
34	)	)	-RRB-	_	22	punct	_
35	the	the	DT	_	36	det	_
36	solving	solve	VBG	p2=NN	38	nsubj	38:A1=PPT
37	itself	itself	PRP	_	36	appos	_
38	is	be	VBZ	pb=be.01	22	conj	_
39	fairly	fairly	RB	_	40	advmod	_
40	easy	easy	JJ	_	38	acomp	38:A2=PRD
41	.	.	.	_	22	punct	_

1	Most	most	JJS	p2=RBS	4	amod	_
2	Rubik	rubik	NNP	p2=VBP	4	poss	_
3	's	's	POS	p2=VBZ	2	possessive	_
4	Cubes	cube	NNPS	p2=NNS	7	nsubjpass	7:A1=PPT
5	can	can	MD	_	7	aux	7:AM-MOD
6	be	be	VB	_	7	auxpass	_
7	solved	solve	VBN	pb=solve.01	28	ccomp	_
8	in	in	IN	p2=RP	7	prep	7:AM-LOC
9	around	around	RB	p2=IN	10	advmod	_
10	100	0	CD	_	11	num	_
11	moves	move	NNS	_	8	pobj	_
12	-	-	:	p2=HYPH	11	punct	_
13	so	so	RB	p2=CC	28	advmod	28:AM-DIS
14	,	,	,	_	28	punct	_
15	with	with	IN	_	28	prep	28:AM-ADV
16	a	a	DT	_	18	det	_
17	little	little	JJ	_	18	amod	_
18	practice	practice	NN	_	15	pobj	_
19	,	,	,	_	28	punct	_
20	solving	solve	VBG	pb=solve.01	28	csubj	28:A1=PPT
21	a	a	DT	_	22	det	_
22	cube	cube	NN	_	20	dobj	20:A1=PPT
23	in	in	IN	p2=RP	20	prep	20:AM-LOC
24	under	under	IN	_	23	prep	_
25	a	a	DT	_	26	quantmod	_
26	few	few	JJ	_	27	num	_
27	minutes	minute	NNS	_	24	pobj	_
28	is	be	VBZ	pb=be.01	0	root	_
29	actually	actually	RB	_	28	advmod	28:AM-ADV
30	quite	quite	RB	_	31	advmod	_
31	feasible	feasible	JJ	_	28	acomp	28:A2=PRD
32	.	.	.	_	28	punct	_

1	Eventually	eventually	RB	_	6	advmod	6:AM-TMP
2	,	,	,	_	6	punct	_
3	you	you	PRP	_	6	nsubj	6:A0=PAG
4	might	might	MD	_	6	aux	6:AM-MOD
5	even	even	RB	_	6	advmod	6:AM-ADV
6	solve	solve	VB	pb=solve.01	0	root	_
7	it	it	PRP	_	6	dobj	6:A1=PPT
8	in	in	IN	p2=RP	6	prep	6:AM-TMP
9	around	around	IN	p2=RB	10	advmod	_
10	five	#crd#	CD	_	11	num	_
11	seconds	#ord#	NNS	_	8	pobj	_
12	,	,	,	_	6	punct	_
13	like	like	IN	_	6	prep	_
14	this	this	DT	_	15	det	_
15	guy	guy	NN	_	13	pobj	_
16	(	(	-LRB-	_	19	punct	_
17	but	but	CC	_	19	cc	_
18	I	I	PRP	_	19	nsubj	19:A0=PAG
19	doubt	doubt	VBP	pb=doubt.01	15	parataxis	_
20	it	it	PRP	_	19	dobj	19:A1=PPT
21	)	)	-RRB-	_	19	punct	_
22	.	.	.	_	6	punct	_

1	This	this	DT	_	2	nsubj	2:A1=PPT
2	being	be	VBG	p2=NN|pb=be.01	0	root	_
3	ExtremeTech	extremetech	NNP	_	2	attr	2:A2=PRD
4	,	,	,	_	7	punct	_
5	I	I	PRP	_	7	nsubj	7:A1=PPT
6	would	would	MD	_	7	aux	7:AM-MOD
7	be	be	VB	pb=be.01	0	root	_
8	remiss	remiss	JJ	p2=NNS	7	acomp	7:A2=PRD
9	if	if	IN	_	13	mark	_
10	I	I	PRP	_	13	nsubj	13:A0=CAU
11	did	do	VBD	_	13	aux	_
12	n't	not	RB	_	13	neg	13:AM-NEG
13	show	show	VB	pb=show.01	7	advcl	7:AM-ADV
14	you	you	PRP	_	13	iobj	13:A2=GOL
15	a	a	DT	_	20	det	_
16	few	few	JJ	_	20	amod	_
17	extreme	extreme	JJ	p2=NN	20	amod	_
18	,	,	,	_	20	punct	_
19	technological	technological	JJ	_	20	amod	_
20	ways	way	NNS	_	13	dobj	13:A1=PPT
21	of	of	IN	_	20	prep	_
22	solving	solve	VBG	pb=solve.01	21	pcomp	_
23	a	a	DT	_	24	det	_
24	Rubik	rubik	NNP	_	26	poss	_
25	's	's	POS	_	24	possessive	_
26	Cube	cube	NNP	_	22	dobj	22:A1=PPT
27	.	.	.	_	7	punct	_

1	To	to	TO	_	2	aux	_
2	begin	begin	VB	pb=begin.01	6	advcl	6:A2=PRD
3	with	with	IN	_	2	prep	2:A2=MNR
4	,	,	,	_	6	punct	_
5	here	here	RB	_	6	advmod	6:A1=PPT
6	's	be	VBZ	pb=be.01	0	root	_
7	one	#crd#	CD	_	6	attr	_
8	of	of	IN	_	7	prep	_
9	the	the	DT	_	10	det	_
10	first	#ord#	JJ	_	13	amod	_
11	at	at	IN	p2=NN	13	hmod	_
12	-	-	HYPH	_	13	hyph	_
13	home	home	NN	_	15	nn	_
14	robotic	robotic	JJ	p2=NN	15	nn	_
15	Rubik	rubik	NNP	p2=NNPS	21	poss	_
16	's	's	POS	_	15	possessive	_
17	Cube	cube	NNP	_	18	nn	_
18	solvers	solver	NNS	p2=NN	20	hmod	_
19	-	-	HYPH	p2=,	20	hyph	_
20	made	make	VBN	p2=VBD	23	amod	_
21	using	use	VBG	p2=NN|pb=use.01	3	pcomp	_
22	Lego	lego	NNP	_	23	nn	_
23	Mindstorms	mindstorms	NNP	p2=NNPS	21	dobj	21:A1=PPT
24	no	no	DT	p2=RB	25	det	_
25	less	less	JJR	p2=RBR	21	advmod	_
26	.	.	.	_	6	punct	_

1	And	and	CC	_	12	cc	12:AM-DIS
2	then	then	RB	_	12	advmod	12:AM-TMP
3	,	,	,	_	12	punct	_
4	to	to	TO	_	5	aux	_
5	show	show	VB	pb=show.01	20	advcl	20:AM-PRP
6	you	you	PRP	_	5	dobj	5:A2=GOL
7	just	just	RB	_	12	advmod	12:AM-ADV
8	how	how	WRB	_	9	advmod	_
9	far	far	RB	_	12	advmod	12:R-AM-MNR
10	Mindstorms	mindstorms	NNPS	p2=PRP	12	nsubj	12:A1=PPT
11	have	have	VBP	_	12	aux	_
12	come	come	VBN	pb=come.01	0	root	_
13	in	in	IN	_	12	prep	12:AM-TMP
14	the	the	DT	_	16	det	_
15	six	#crd#	CD	_	16	num	_
16	years	year	NNS	_	13	pobj	_
17	since	since	RB	p2=IN	16	advmod	_
18	,	,	,	_	20	punct	_
19	here	here	RB	_	20	advmod	20:A2=PRD
20	's	be	VBZ	p2=POS|pb=be.01	0	root	_
21	Cubestormer	cubestormer	NNP	p2=JJR	20	nsubj	26:A0;20:A1=PPT
22	3	0	CD	_	21	num	_
23	,	,	,	_	21	punct	_
24	which	which	WDT	_	26	nsubj	26:R-A0
25	can	can	MD	_	26	aux	26:AM-MOD
26	solve	solve	VB	pb=solve.01	21	rcmod	_
27	a	a	DT	_	28	det	_
28	cube	cube	NN	_	26	dobj	26:A1=PPT
29	in	in	IN	p2=RP	26	prep	26:AM-TMP
30	around	around	RB	p2=IN	31	advmod	_
31	three	#crd#	CD	_	32	num	_
32	seconds	#ord#	NNS	_	29	pobj	_
33	.	.	.	_	12	punct	_

1	The	the	DT	_	3	det	_
2	main	main	JJ	_	3	amod	_
3	advantage	advantage	NN	_	7	nsubj	6:A1=PPT;7:A1=PPT
4	that	that	WDT	p2=IN	6	dobj	6:R-A1
5	robots	robot	NNS	p2=VBZ	6	nsubj	6:A0=PAG
6	have	have	VBP	pb=have.03	3	rcmod	_
7	is	be	VBZ	pb=be.01	0	root	_
8	that	that	IN	_	12	complm	_
9	they	they	PRP	_	12	nsubj	12:A0=PAG
10	can	can	MD	_	12	aux	12:AM-MOD
11	seamlessly	seamlessly	RB	p2=VB	12	advmod	12:AM-MNR
12	move	move	VB	pb=move.01	7	ccomp	7:A2=PRD
13	multiple	multiple	JJ	_	14	amod	_
14	pieces	piece	NNS	_	12	dobj	12:A1=PPT
15	at	at	IN	_	12	prep	12:AM-TMP
16	the	the	DT	_	18	det	_
17	same	same	JJ	_	18	amod	_
18	time	time	NN	_	15	pobj	_
19	.	.	.	_	7	punct	_

1	Human	human	NN	p2=NNP	2	nn	_
2	speedcubers	speedcubers	NNS	_	5	nsubj	5:A0=PAG
3	can	can	MD	_	5	aux	5:AM-MOD
4	also	also	RB	_	5	advmod	5:AM-DIS
5	manipulate	manipulate	VB	pb=manipulate.02	0	root	_
6	multiple	multiple	JJ	_	7	amod	_
7	pieces	piece	NNS	_	5	dobj	5:A1=PPT
8	at	at	IN	_	5	prep	5:AM-TMP
9	once	once	RB	_	8	pcomp	_
10	,	,	,	_	5	punct	_
11	but	but	CC	_	5	cc	_
12	not	not	RB	_	13	neg	_
13	quite	quite	RB	_	14	advmod	_
14	at	at	IN	_	5	conj	_
15	the	the	DT	_	17	det	_
16	same	same	JJ	_	17	amod	_
17	scale	scale	NN	_	14	pobj	_
18	as	as	IN	_	17	prep	_
19	a	a	DT	_	20	det	_
20	robot	robot	NN	_	18	pobj	_
21	.	.	.	_	5	punct	_

1	Robots	robot	NNS	p2=NNP	2	nsubj	2:A1=PPT
2	are	be	VBP	pb=be.01	0	root	_
3	also	also	RB	_	2	advmod	2:AM-ADV
4	perfectly	perfectly	RB	_	5	advmod	_
5	suited	suited	JJ	p2=VBN	2	acomp	2:A2=PRD
6	because	because	IN	_	12	mark	_
7	the	the	DT	_	10	det	_
8	fastest	fast	JJS	p2=RBS	9	amod	_
9	speedcubing	speedcubing	NN	p2=VBG	10	nn	_
10	algorithms	algorithm	NNS	p2=VBZ	12	nsubj	12:A0=PAG
11	only	only	RB	_	12	advmod	12:AM-ADV
12	require	require	VBP	p2=VB|pb=require.01	2	advcl	2:AM-CAU
13	one	#crd#	CD	p2=NN	12	dobj	12:A1=PPT
14	"	"	``	_	15	punct	_
15	look	look	VB	p2=NN|pb=look.02	40	advcl	_
16	"	"	''	_	15	punct	_
17	-	-	:	p2=,	15	punct	_
18	as	as	IN	_	40	prep	_
19	in	in	IN	p2=RP	18	prep	_
20	,	,	,	_	19	punct	_
21	by	by	IN	_	19	conj	_
22	memorizing	memorize	VBG	p2=NN|pb=memorize.01	21	pcomp	_
23	where	where	WRB	_	27	advmod	27:R-A2
24	all	all	PDT	_	26	predet	_
25	the	the	DT	_	26	det	_
26	pieces	piece	NNS	_	27	nsubj	27:A1=PPT
27	are	be	VBP	pb=be.01	22	ccomp	22:A1=PPT
28	in	in	IN	_	27	prep	_
29	an	an	DT	_	31	det	_
30	unsolved	unsolved	JJ	_	31	amod	_
31	cube	cube	NN	_	28	pobj	_
32	,	,	,	_	40	punct	_
33	an	an	DT	_	35	det	_
34	exact	exact	JJ	_	35	amod	_
35	set	set	NN	_	40	nsubjpass	43:A0;40:A1=PPT
36	of	of	IN	_	35	prep	_
37	moves	move	NNS	_	36	pobj	_
38	can	can	MD	_	40	aux	40:AM-MOD
39	be	be	VB	_	40	auxpass	_
40	generated	generate	VBN	pb=generate.01	1	ccomp	_
41	that	that	WDT	p2=DT	43	nsubj	43:R-A0
42	will	will	MD	_	43	aux	43:AM-MOD
43	solve	solve	VB	pb=solve.01	35	rcmod	_
44	the	the	DT	_	45	det	_
45	cube	cube	NN	_	43	dobj	43:A1=PPT
46	in	in	IN	_	43	prep	43:AM-TMP
47	one	#crd#	CD	_	48	num	_
48	go	go	NN	p2=VB	46	pobj	_
49	.	.	.	_	2	punct	_

1	And	and	CC	_	20	cc	20:AM-DIS
2	finally	finally	RB	_	20	advmod	20:AM-TMP
3	,	,	,	_	20	punct	_
4	even	even	RB	_	7	advmod	_
5	though	though	IN	_	7	mark	_
6	it	it	PRP	_	7	nsubj	7:A1=PPT
7	is	be	VBZ	pb=be.01	20	advcl	20:AM-ADV
8	n't	not	RB	_	7	neg	7:AM-NEG
9	technological	technological	JJ	_	7	acomp	7:A2=PRD
10	at	at	RB	p2=IN	11	advmod	_
11	all	all	RB	p2=DT	7	advmod	7:AM-TMP
12	(	(	-LRB-	_	7	punct	_
13	but	but	CC	_	7	cc	_
14	it	it	PRP	_	15	nsubj	15:A1=PPT
15	is	be	VBZ	pb=be.01	7	conj	_
16	extreme	extreme	JJ	_	15	acomp	15:A2=PRD
17	)	)	-RRB-	_	15	punct	_
18	,	,	,	_	20	punct	_
19	here	here	RB	p2=PRP	20	advmod	20:A2=PRD
20	's	be	VBZ	pb=be.01	0	root	_
21	a	a	DT	_	22	det	_
22	lunatic	lunatic	JJ	p2=NN	20	attr	23:A0=PAG;20:A1=PPT
23	solving	solve	VBG	p2=NN|pb=solve.01	22	partmod	_
24	an	an	DT	_	28	det	_
25	11x11x11	0x0x0	CD	p2=NN	28	num	_
26	Rubik	rubik	NNP	_	28	poss	_
27	's	's	POS	_	26	possessive	_
28	Cube	cube	NNP	_	23	dobj	23:A1=PPT
29	.	.	.	_	20	punct	_

1	No	no	UH	_	5	intj	5:AM-DIS
2	I	I	PRP	_	5	nsubj	5:A0=PAG
3	wo	wo	MD	_	5	aux	5:AM-MOD
4	n't	not	RB	_	5	neg	5:AM-NEG
5	teach	teach	VB	pb=teach.01	0	root	_
6	you	you	PRP	_	5	dobj	5:A2=GOL
7	how	how	WRB	_	9	advmod	9:R-AM-MNR
8	to	to	TO	_	9	aux	_
9	solve	solve	VB	pb=solve.01	5	xcomp	5:A1=PPT
10	larger	large	JJR	_	11	amod	_
11	Rubik	rubik	NNP	_	13	poss	_
12	's	's	POS	_	11	possessive	_
13	Cubes	cube	NNPS	p2=NNS	9	dobj	9:A1=PPT
14	.	.	.	_	5	punct	_

1	Life	life	NN	p2=NNP	2	nsubj	2:A1=PPT
2	is	be	VBZ	pb=be.01	0	root	_
3	too	too	RB	_	4	advmod	_
4	short	short	JJ	_	2	acomp	2:A2=PRD
5	.	.	.	_	2	punct	_

1	I	I	PRP	_	2	nsubj	2:A0=PAG;6:A0=PAG;11:A0=PAG
2	have	have	VBP	pb=have.03	0	root	_
3	better	good	JJR	_	4	amod	_
4	strategy	strategy	NN	_	2	dobj	2:A1=PPT
5	:	:	:	_	2	punct	_
6	Remove	remove	VB	pb=remove.01	2	dep	_
7	the	the	DT	_	8	det	_
8	stickers	sticker	NNS	_	6	dobj	6:A1=PPT
9	and	and	CC	_	6	cc	_
10	then	then	RB	_	11	advmod	11:AM-TMP
11	reapply	reapply	VB	p2=VBD|pb=reapply.01	6	conj	_
12	them	them	PRP	_	11	dobj	11:A1=PPT
13	in	in	IN	_	11	prep	11:AM-MNR
14	matching	match	VBG	pb=match.01	13	pcomp	_
15	colours	color	NNS	_	14	dobj	14:A1=PPT
16	.	.	.	_	2	punct	_

1	Ah	ah	UH	_	5	intj	5:AM-DIS
2	,	,	,	_	5	punct	_
3	that	that	DT	_	5	nsubj	5:A0=PAG
4	might	might	MD	_	5	aux	5:AM-MOD
5	look	look	VB	pb=look.02	0	root	_
6	good	good	JJ	_	5	acomp	5:A1=PPT
7	on	on	IN	_	5	prep	5:AM-LOC
8	your	your	PRP$	_	19	poss	_
9	big	big	JJ	_	19	amod	_
10	,	,	,	_	9	punct	_
11	executive	executive	JJ	_	12	nn	_
12	desk	desk	NN	_	7	pobj	_
13	-	-	HYPH	p2=:	12	hyph	_
14	but	but	CC	_	12	cc	_
15	deep	deep	RB	p2=JJ	19	advmod	_
16	down	down	RB	p2=IN	19	advmod	_
17	you	you	PRP	_	19	nsubj	19:A0=PAG
18	'll	will	MD	_	19	aux	19:AM-MOD
19	know	know	VB	pb=know.01	12	conj	_
20	that	that	IN	_	22	complm	_
21	you	you	PRP	_	22	nsubj	22:A1=PPT
22	're	be	VBP	pb=be.01	19	ccomp	19:A1=PPT
23	a	a	DT	_	24	det	_
24	FRAUD	fraud	NNP	p2=NN	22	attr	22:A2=PRD
25	!	!	.	_	5	punct	_

1	You	you	PRP	_	2	nsubj	2:A0
2	say	say	VBP	pb=say.01	0	root	_
3	fraud	fraud	NN	_	6	dep	_
4	I	I	PRP	_	6	nsubj	6:A0
5	say	say	VBP	_	6	aux	_
6	thinking	think	VBG	pb=think.01	2	ccomp	2:A1=PPT
7	outside	outside	IN	_	6	prep	6:AM-LOC
8	the	the	DT	_	9	det	_
9	cube	cube	NN	_	11	poss	_
10	's	's	POS	_	9	possessive	_
11	constraints	constraint	NNS	_	7	pobj	_
12	.	.	.	_	2	punct	_

1	I	I	PRP	_	2	nsubj	2:A0=PAG
2	remember	remember	VBP	pb=remember.01	0	root	_
3	that	that	IN	p2=DT	5	complm	_
4	StarTrek	startrek	NNP	p2=JJ	5	nn	_
5	episode	episode	NN	_	2	dobj	2:A1=PPT
6	.	.	.	_	2	punct	_

1	There	there	EX	_	2	expl	_
2	is	be	VBZ	pb=be.02	0	root	_
3	a	a	DT	_	4	det	_
4	place	place	NN	_	2	attr	2:A1=PPT
5	for	for	IN	_	4	prep	_
6	dispensing	dispense	VBG	p2=NN|pb=dispense.01	5	pcomp	_
7	with	with	IN	_	6	prep	6:A1=PPT
8	constraints	constraint	NNS	_	7	pobj	_
9	and	and	CC	_	8	cc	_
10	a	a	DT	_	11	det	_
11	time	time	NN	_	8	conj	_
12	for	for	IN	_	11	prep	_
13	revering	revere	VBG	pb=revere.01	12	pcomp	_
14	them	them	PRP	_	13	dobj	13:A1=PAG
15	.	.	.	_	2	punct	_

1	Once	once	IN	_	4	mark	_
2	you	you	PRP	_	4	nsubj	4:A0=PAG;6:A0=PAG
3	have	have	VBP	_	4	aux	_
4	learned	learn	VBN	pb=learn.01	25	advcl	25:AM-TMP
5	to	to	TO	_	6	aux	_
6	solve	solve	VB	pb=solve.01	4	xcomp	4:A1=PPT
7	the	the	DT	_	8	det	_
8	cube	cube	NN	_	6	dobj	6:A1=PPT
9	honestly	honestly	RB	_	6	advmod	6:AM-MNR
10	,	,	,	_	25	punct	_
11	as	as	IN	_	13	mark	_
12	I	I	PRP	_	13	nsubj	13:A0=PAG
13	did	do	VBD	pb=do.02	25	advcl	25:AM-ADV
14	as	as	IN	p2=RB	13	prep	13:AM-PRD
15	a	a	DT	_	16	det	_
16	teen	teen	NN	_	14	pobj	21:AM-TMP
17	when	when	WRB	_	21	advmod	21:R-AM-TMP
18	it	it	PRP	_	21	nsubjpass	21:A1=PPT
19	was	be	VBD	_	21	auxpass	_
20	first	#ord#	RB	_	21	advmod	21:AM-TMP
21	introduced	introduce	VBN	pb=introduce.02	16	rcmod	_
22	,	,	,	_	25	punct	_
23	you	you	PRP	_	25	nsubj	25:A0=PAG
24	will	will	MD	_	25	aux	25:AM-MOD
25	realize	realize	VB	pb=realize.01	0	root	_
26	that	that	IN	p2=DT	28	complm	_
27	it	it	PRP	_	28	nsubj	28:A1=PPT
28	is	be	VBZ	pb=be.01	25	ccomp	25:A1=PPT
29	actually	actually	RB	_	28	advmod	28:AM-ADV
30	much	much	RB	_	31	advmod	_
31	easier	easy	JJR	_	28	acomp	28:A2=PRD
32	to	to	TO	_	33	aux	_
33	solve	solve	VB	pb=solve.01	31	xcomp	_
34	the	the	DT	_	35	det	_
35	cube	cube	NN	_	33	dobj	33:A1=PPT
36	honestly	honestly	RB	_	33	advmod	33:AM-MNR
37	,	,	,	_	33	punct	_
38	than	than	IN	_	31	prep	_
39	by	by	IN	_	38	prep	_
40	any	any	DT	_	42	det	_
41	other	other	JJ	_	42	amod	_
42	means	mean	NNS	p2=NN	39	pobj	_
43	.	.	.	_	25	punct	_

1	(	(	-LRB-	_	15	punct	_
2	Once	once	RB	p2=IN	4	advmod	4:AM-TMP
3	I	I	PRP	_	4	nsubj	4:A0=PAG;6:A0=PAG
4	learned	learn	VBD	pb=learn.01	15	advcl	15:AM-TMP
5	to	to	TO	_	6	aux	_
6	solve	solve	VB	pb=solve.01	4	xcomp	4:A1=PPT
7	it	it	PRP	_	6	dobj	6:A1=PPT
8	by	by	IN	_	6	prep	6:A2=MNR
9	my	my	PRP$	_	11	poss	_
10	own	own	JJ	_	11	amod	_
11	wits	wit	NNS	_	8	pobj	_
12	,	,	,	_	15	punct	_
13	I	I	PRP	_	15	nsubj	15:A0=PAG
14	actually	actually	RB	_	15	advmod	15:AM-ADV
15	wrote	write	VBD	pb=write.01	0	root	_
16	a	a	DT	_	18	det	_
17	computer	computer	NN	_	18	nn	_
18	program	program	NN	_	15	dobj	15:A1=PPT
19	to	to	TO	_	20	aux	_
20	solve	solve	VB	pb=solve.01	18	infmod	_
21	it	it	PRP	_	20	dobj	20:A1=PPT
22	.	.	.	_	15	punct	_

1	It	it	PRP	_	3	nsubj	3:A0
2	only	only	RB	_	3	advmod	3:AM-ADV
3	took	take	VBD	pb=take.10	0	root	_
4	4	0	CD	_	6	num	_
5	printed	print	VBN	pb=print.01	6	amod	_
6	pages	page	NNS	_	3	dobj	3:A1;5:A1=PPT
7	of	of	IN	_	6	prep	_
8	BASIC	basic	NNP	p2=JJ	9	nn	_
9	code	code	NN	_	7	pobj	_
10	.	.	.	_	3	punct	_
11	)	)	-RRB-	_	3	punct	_

1	By	by	IN	_	9	prep	9:AM-MNR;12:AM-MNR
2	the	the	DT	_	3	det	_
3	way	way	NN	_	1	pobj	_
4	,	,	,	_	9	punct	_
5	removing	remove	VBG	pb=remove.01	9	csubj	12:A0=PAG;9:A1=PPT
6	the	the	DT	_	8	det	_
7	color	color	NN	_	8	nn	_
8	stickers	sticker	NNS	_	5	dobj	5:A1=PPT
9	is	be	VBZ	pb=be.01	0	root	_
10	messy	messy	JJ	_	9	acomp	9:A2=PRD
11	and	and	CC	_	9	cc	_
12	ruins	ruin	VBZ	pb=ruin.01	9	conj	_
13	the	the	DT	_	14	det	_
14	cube	cube	NN	_	12	dobj	12:A1=PPT
15	.	.	.	_	9	punct	_

1	The	the	DT	_	3	det	_
2	better	good	JJR	p2=RBR	3	amod	_
3	cheat	cheat	NN	_	4	nsubj	4:A1=PPT
4	is	be	VBZ	pb=be.01	17	ccomp	_
5	actually	actually	RB	_	4	advmod	4:AM-ADV
6	to	to	IN	p2=TO	4	prep	4:A2=PRD
7	disassemble	disassemble	NN	p2=JJ	6	pobj	_
8	and	and	CC	_	4	cc	_
9	then	then	RB	_	10	advmod	10:AM-TMP
10	reassemble	reassemble	VB	p2=VBP|pb=reassemble.01	4	conj	_
11	cube	cube	NN	_	10	dobj	10:A1=PRD
12	-	-	:	p2=,	17	punct	_
13	no	no	DT	_	14	det	_
14	one	#crd#	NN	_	17	nsubj	20:A0=PPT;17:A1=PPT
15	will	will	MD	_	17	aux	17:AM-MOD
16	ever	ever	RB	_	17	advmod	17:AM-TMP
17	be	be	VB	pb=be.01	0	root	_
18	able	able	JJ	_	17	acomp	17:A2=PRD
19	to	to	TO	_	20	aux	_
20	detect	detect	VB	pb=detect.01	18	xcomp	_
21	that	that	DT	_	22	det	_
22	cheat	cheat	NN	_	20	dobj	20:A1=PAG
23	.	.	.	_	17	punct	_

1	I	I	PRP	_	3	nsubj	3:A0=PAG
2	also	also	RB	_	3	advmod	3:AM-DIS
3	modified	modify	VBD	pb=modify.01	0	root	_
4	a	a	DT	_	5	det	_
5	cube	cube	NN	_	3	dobj	3:A1=PPT;13:A1=PPT
6	(	(	-LRB-	_	8	punct	_
7	actually	actually	RB	_	8	advmod	_
8	2	0	CD	_	5	appos	_
9	of	of	IN	_	8	prep	_
10	them	them	PRP	_	9	pobj	_
11	)	)	-RRB-	_	8	punct	_
12	to	to	TO	_	13	aux	_
13	be	be	VB	pb=be.01	3	advcl	3:AM-PRP
14	a	a	DT	_	16	det	_
15	perpetual	perpetual	JJ	_	16	amod	_
16	calendar	calendar	NN	_	13	attr	13:A2=PRD
17	.	.	.	_	3	punct	_

1	I	I	PRP	_	2	nsubj	2:A0=PAG
2	do	do	VBP	pb=do.02	0	root	_
3	that	that	DT	_	2	dobj	2:A1=PPT
4	too	too	RB	_	2	advmod	2:AM-ADV
5	but	but	CC	_	2	cc	_
6	with	with	IN	_	2	prep	_
7	the	the	DT	_	8	det	_
8	cubes	cube	NNS	_	6	pobj	10:A0=PAG
9	that	that	WDT	_	10	nsubj	10:R-A0
10	have	have	VBP	pb=have.03	8	rcmod	_
11	the	the	DT	_	12	det	_
12	colours	color	NNS	_	10	dobj	10:A1=PPT;13:A1=PPT
13	painted	paint	VBN	pb=paint.02	12	partmod	_
14	in	in	IN	_	13	prep	13:A2=GOL
15	them	them	PRP	_	14	pobj	_
16	.	.	.	_	2	punct	_

1	You	you	PRP	_	5	nsubj	5:A0;9:A0=PAG
2	could	could	MD	_	5	aux	5:AM-MOD;9:AM-MOD
3	always	always	RB	_	5	advmod	5:AM-TMP;9:AM-TMP
4	just	just	RB	_	5	advmod	5:AM-ADV
5	take	take	VB	pb=take.01	0	root	_
6	it	it	PRP	_	5	dobj	5:A1=PPT
7	apart	apart	RB	_	5	advmod	5:A2=DIR
8	and	and	CC	_	5	cc	_
9	put	put	VB	p2=VBD|pb=put.01	5	conj	_
10	them	them	PRP	_	9	dobj	9:A1=PPT
11	back	back	RB	_	9	advmod	9:A2=GOL
12	in	in	IN	_	9	prep	9:AM-PRP
13	the	the	DT	_	15	det	_
14	correct	correct	JJ	_	15	amod	_
15	order	order	NN	_	12	pobj	_
16	.	.	.	_	5	punct	_

1	then	then	RB	_	5	advmod	5:AM-TMP
2	you	you	PRP	_	5	nsubj	5:A0=PAG
3	do	do	VBP	_	5	aux	_
4	n't	not	RB	_	5	neg	5:AM-NEG
5	mess	mess	VB	pb=mess.02	0	root	_
6	up	up	RP	_	5	prt	5:C-V
7	the	the	DT	_	8	det	_
8	stickers	sticker	NNS	_	5	dobj	5:A1=PPT
9	.	.	.	_	5	punct	_

1	That	that	DT	_	2	det	_
2	method	method	NN	_	3	nsubj	3:A1=PPT
3	is	be	VBZ	pb=be.01	0	root	_
4	even	even	RB	_	5	advmod	_
5	more	more	JJR	_	3	acomp	3:A2=PRD
6	of	of	IN	_	5	prep	_
7	a	a	DT	_	8	det	_
8	pain	pain	NN	_	6	pobj	_
9	than	than	IN	_	5	prep	_
10	simply	simply	RB	_	11	advmod	11:AM-ADV
11	solving	solve	VBG	pb=solve.01	9	pcomp	_
12	it	it	PRP	_	11	dobj	11:A1=PPT
13	.	.	.	_	3	punct	_

1	using	use	VBG	pb=use.01	3	csubj	3:A1=PPT
2	paint	paint	NN	_	1	dobj	1:A1=PPT
3	is	be	VBZ	pb=be.01	0	root	_
4	much	much	RB	_	5	advmod	_
5	easier	easy	JJR	_	3	acomp	3:A2=PRD
6	the	the	DT	_	7	det	_
7	stickers	sticker	NNS	_	9	nsubjpass	9:A1=PPT
8	are	be	VBP	_	9	auxpass	_
9	glued	glue	VBN	pb=glue.01	3	advcl	_
10	strongly	strongly	RB	_	9	advmod	9:AM-MNR
11	.	.	.	_	3	punct	_

1	Nope	nope	UH	p2=NNP	5	intj	5:AM-DIS
2	,	,	,	_	5	punct	_
3	a	a	DT	_	4	det	_
4	spudger	spudger	NN	_	5	nsubj	5:A1=PPT
5	is	be	VBZ	pb=be.01	0	root	_
6	perfect	perfect	JJ	_	5	acomp	5:A2=PRD
7	.	.	.	_	5	punct	_

1	You	you	PRP	_	3	nsubj	3:A0=PAG;9:A0=PAG
2	can	can	MD	_	3	aux	3:AM-MOD;9:AM-MOD
3	pluck	pluck	VB	pb=pluck.01	0	root	_
4	out	out	RP	_	3	prt	3:C-V
5	the	the	DT	_	6	det	_
6	tiles	tile	NNS	_	3	dobj	3:A1=PPT
7	and	and	CC	_	3	cc	_
8	then	then	RB	_	9	advmod	9:AM-TMP
9	reassemble	reassemble	VB	pb=reassemble.01	3	conj	_
10	it	it	PRP	_	9	dobj	9:A1=PRD
11	.	.	.	_	3	punct	_

1	That	that	DT	_	2	det	_
2	robot	robot	NN	_	3	nsubj	3:A1=PPT
3	is	be	VBZ	pb=be.01	0	root	_
4	insane	insane	JJ	_	3	acomp	3:A2=PRD
5	!	!	.	_	3	punct	_

1	It	it	PRP	_	2	nsubj	2:A0=PAG
2	looked	look	VBD	pb=look.02	0	root	_
3	like	like	IN	_	5	mark	_
4	it	it	PRP	_	5	nsubj	5:A0=PAG
5	paused	pause	VBD	pb=pause.01	2	advcl	2:A1=PPT
6	for	for	IN	_	5	prep	5:AM-TMP
7	a	a	DT	_	8	det	_
8	moment	moment	NN	_	6	pobj	_
9	too	too	RB	_	5	advmod	_
10	,	,	,	_	13	punct	_
11	so	so	IN	p2=CC	13	mark	_
12	it	it	PRP	_	13	nsubj	_
13	's	be	VBZ	pb=be.01	5	advcl	_
14	probably	probably	RB	_	13	advmod	13:AM-ADV
15	possible	possible	JJ	_	13	acomp	13:A2=PRD
16	to	to	TO	_	17	aux	_
17	get	get	VB	pb=get.01	13	xcomp	13:A1=PPT
18	even	even	RB	_	19	advmod	_
19	faster	fast	RBR	_	17	advmod	17:AM-MNR
20	.	.	.	_	2	punct	_

1	I	I	PRP	_	2	nsubj	2:A0=PPT
2	miss	miss	VBP	pb=miss.01	11	ccomp	_
3	the	the	DT	_	4	det	_
4	Rubik	rubik	NNP	_	6	poss	_
5	's	's	POS	_	4	possessive	_
6	Magic	magic	NNP	_	2	dobj	2:A1=PAG
7	,	,	,	_	11	punct	_
8	I	I	PRP	_	11	nsubj	11:A0
9	have	have	VBP	_	11	aux	_
10	n't	not	RB	_	11	neg	11:AM-NEG
11	seen	see	VBN	pb=see.01	0	root	_
12	those	those	DT	p2=RB	11	dobj	11:A1
13	around	around	RP	p2=RB	12	partmod	_
14	for	for	IN	_	12	prep	_
15	years	year	NNS	_	14	pobj	_
16	.	.	.	_	11	punct	_

1	I	I	PRP	_	3	nsubj	3:A0=PAG
2	also	also	RB	_	3	advmod	3:AM-DIS
3	had	have	VBD	pb=have.03	0	root	_
4	the	the	DT	_	5	det	_
5	Rubik	rubik	NNP	_	7	poss	_
6	's	's	POS	_	5	possessive	_
7	Clock	clock	NNP	_	3	dobj	3:A1=PPT
8	,	,	,	_	3	punct	_
9	though	though	IN	_	13	mark	_
10	I	I	PRP	_	13	nsubj	13:A0=PAG
11	would	would	MD	_	13	aux	13:AM-MOD
12	n't	not	RB	_	13	neg	13:AM-NEG
13	rate	rate	VB	pb=rate.01	3	advcl	3:AM-ADV
14	that	that	DT	p2=IN	13	dobj	13:A1=PPT
15	as	as	RB	p2=IN	16	advmod	_
16	highly	highly	RB	_	17	advmod	_
17	as	as	IN	_	13	prep	13:A2=VSP
18	the	the	DT	_	19	det	_
19	Cube	cube	NNP	_	17	pobj	_
20	.	.	.	_	3	punct	_

1	Oh	oh	UH	_	6	intj	_
2	man	man	UH	p2=NN	1	intj	_
3	,	,	,	_	6	punct	_
4	Rubik	rubik	NNP	_	6	poss	_
5	's	's	POS	_	4	possessive	_
6	Magic	magic	NNP	_	0	root	_
7	!	!	.	_	6	punct	_

1	That	that	DT	_	2	nsubj	2:A1=PPT
2	was	be	VBD	pb=be.01	11	ccomp	_
3	one	#crd#	CD	_	2	attr	2:A2=PRD
4	of	of	IN	_	3	prep	_
5	my	my	PRP$	_	8	poss	_
6	favourite	favourite	JJ	p2=NN	8	amod	_
7	childhood	childhood	NN	_	8	nn	_
8	toys	toy	NNS	_	4	pobj	_
9	:)	:)	NFP	p2=VBP	11	punct	_
10	I	I	PRP	_	11	nsubj	11:A0=PAG
11	broke	break	VBD	pb=break.01	0	root	_
12	quite	quite	PDT	p2=RB	14	quantmod	_
13	a	a	DT	_	14	quantmod	_
14	few	few	JJ	_	11	dobj	11:A1=PPT
15	of	of	IN	_	14	prep	_
16	them	them	PRP	_	15	pobj	_
17	,	,	,	_	11	punct	_
18	according	accord	VBG	_	11	prep	11:AM-ADV
19	to	to	IN	_	18	prep	_
20	my	my	PRP$	_	21	poss	_
21	mum	mum	NN	_	19	pobj	_
22	.	.	.	_	11	punct	_

1	Yeah	yeah	UH	_	6	intj	6:AM-DIS
2	me	me	PRP	_	6	dep	_
3	too	too	RB	_	2	advmod	_
4	,	,	,	_	6	punct	_
5	I	I	PRP	_	6	nsubj	6:A0=PAG
6	preferred	prefer	VBD	pb=prefer.01	0	root	_
7	it	it	PRP	_	6	dobj	6:A1=PPT
8	to	to	IN	_	6	prep	6:A2=PPT
9	the	the	DT	_	10	det	_
10	cube	cube	NN	_	8	pobj	_
11	.	.	.	_	6	punct	_

1	The	the	DT	_	3	det	_
2	last	last	JJ	_	3	amod	_
3	one	#crd#	NN	p2=CD	18	nsubj	18:A0=PAG
4	I	I	PRP	_	7	nsubjpass	6:A1=PPT;7:A1=PPT
5	had	have	VBD	_	7	aux	_
6	got	get	VBN	pb=get.03	7	auxpass	_
7	confiscated	confiscate	VBN	pb=confiscate.01	3	rcmod	6:A2=GOL
8	by	by	IN	_	7	agent	7:A0=PAG
9	a	a	DT	_	11	det	_
10	supply	supply	NN	_	11	nn	_
11	teacher	teacher	NN	_	8	pobj	_
12	,	,	,	_	3	punct	_
13	and	and	CC	_	3	cc	_
14	when	when	WRB	_	16	advmod	16:R-AM-TMP
15	I	I	PRP	_	16	nsubj	16:A0=PPT
16	went	go	VBD	pb=go.02	0	root	_
17	to	to	TO	_	18	aux	_
18	get	get	VB	pb=get.01	16	xcomp	_
19	it	it	PRP	_	18	dobj	18:A1=PPT
20	back	back	RP	p2=RB	18	prt	18:C-V
21	she	she	PRP	_	23	nsubj	23:A0
22	'd	have	VBD	p2=MD	23	aux	_
23	left	leave	VBN	pb=leave.01	18	ccomp	_
24	.	.	.	_	16	punct	_

1	Guess	guess	VB	p2=VBP|pb=guess.01	0	root	_
2	I	I	PRP	_	6	nsubj	6:A0
3	should	should	MD	_	6	aux	6:AM-MOD
4	n't	not	RB	_	6	neg	6:AM-NEG
5	have	have	VB	_	6	aux	_
6	taken	take	VBN	pb=take.01	1	ccomp	1:A1=PPT
7	it	it	PRP	_	6	dobj	6:A1=PPT
8	to	to	IN	_	6	prep	6:AM-GOL
9	school	school	NN	p2=NNP	8	pobj	_
10	.	.	.	_	1	punct	_

1	I	I	PRP	_	2	nsubj	2:A0
2	think	think	VBP	pb=think.01	0	root	_
3	they	they	PRP	_	4	nsubj	4:A1=PPT
4	were	be	VBD	pb=be.01	2	ccomp	2:A1=PPT
5	quite	quite	RB	_	6	advmod	_
6	easy	easy	JJ	_	4	acomp	4:A2=PRD
7	to	to	TO	_	8	aux	_
8	break	break	VB	pb=break.01	6	xcomp	_
9	,	,	,	_	4	punct	_
10	as	as	IN	_	12	mark	_
11	they	they	PRP	_	12	nsubj	12:A0=PAG
12	had	have	VBD	pb=have.03	4	advcl	4:AM-ADV
13	plastic	plastic	JJ	p2=NN	14	amod	_
14	strings	string	NNS	_	12	dobj	12:A1=PPT;16:A1=PPT
15	that	that	WDT	_	16	nsubj	16:R-A1
16	came	come	VBD	pb=come.04	14	rcmod	_
17	loose	loose	JJ	p2=RB	16	acomp	16:A2=PRD
18	.	.	.	_	2	punct	_

1	Some	some	DT	_	6	nsubj	6:A0=PAG
2	of	of	IN	_	1	prep	_
3	my	my	PRP$	_	4	poss	_
4	friends	friend	NNS	_	2	pobj	_
5	were	be	VBD	_	6	aux	_
6	doing	do	VBG	pb=do.02	8	csubj	8:A1=LOC
7	speed	speed	NN	_	6	dobj	6:A1=PPT
8	runs	run	VBZ	p2=NNS|pb=run.02	0	root	_
9	on	on	IN	_	8	prep	8:AM-LOC
10	them	them	PRP	_	9	pobj	_
11	,	,	,	_	8	punct	_
12	so	so	IN	p2=RB	15	mark	_
13	they	they	PRP	_	15	nsubj	15:A0
14	did	do	VBD	_	15	aux	_
15	take	take	VB	pb=take.01	8	advcl	8:AM-PRP
16	some	some	DT	_	17	det	_
17	abuse	abuse	NN	_	15	dobj	15:A1=PPT
18	.	.	.	_	8	punct	_

1	I	I	PRP	_	4	nsubj	4:A0=PAG;6:A0=PAG;9:A0=PAG
2	do	do	VBP	_	4	aux	_
3	n't	not	RB	_	4	neg	4:AM-NEG
4	need	need	VB	pb=need.01	14	ccomp	_
5	to	to	TO	_	6	aux	_
6	know	know	VB	pb=know.01	4	xcomp	4:A1=PPT
7	how	how	WRB	_	9	advmod	9:R-AM-MNR
8	to	to	TO	_	9	aux	_
9	solve	solve	VB	pb=solve.01	6	xcomp	6:A1=PPT
10	the	the	DT	_	11	det	_
11	thing	thing	NN	_	9	dobj	9:A1=PPT
12	,	,	,	_	14	punct	_
13	I	I	PRP	_	14	nsubj	14:A0=PAG;16:A0=PAG;19:A0=PAG
14	need	need	VBP	p2=VBD|pb=need.01	0	root	_
15	to	to	TO	_	16	aux	_
16	know	know	VB	pb=know.01	14	xcomp	14:A1=PPT
17	how	how	WRB	_	19	advmod	19:R-AM-MNR
18	to	to	TO	_	19	aux	_
19	get	get	VB	pb=get.01	16	xcomp	16:A1=PPT
20	the	the	DT	_	21	det	_
21	side	side	NN	_	19	dobj	19:A1=PPT;25:A1=PPT
22	I	I	PRP	_	23	nsubj	23:A0=PAG;25:A0=PAG
23	want	want	VBP	pb=want.01	21	rcmod	_
24	to	to	TO	_	25	aux	_
25	rotate	rotate	VB	pb=rotate.02	23	xcomp	23:A1=PPT
26	instead	instead	RB	_	25	advmod	25:AM-ADV
27	of	of	IN	_	25	prep	_
28	the	the	DT	_	30	det	_
29	whole	whole	JJ	_	30	amod	_
30	thing	thing	NN	_	27	pobj	_
31	or	or	CC	_	30	cc	_
32	a	a	DT	_	34	det	_
33	different	different	JJ	_	34	amod	_
34	side	side	NN	_	30	conj	_
35	.	.	.	_	14	punct	_

1	If	if	IN	_	4	mark	_
2	you	you	PRP	_	4	nsubj	4:A0=PAG;12:A0=PAG
3	just	just	RB	_	4	advmod	4:AM-ADV
4	click	click	VB	p2=VBP|pb=click.01	24	advcl	24:AM-ADV
5	one	#crd#	CD	_	4	dobj	4:A1=PPT
6	of	of	IN	_	5	prep	_
7	the	the	DT	_	8	det	_
8	squares	square	NNS	_	6	pobj	_
9	,	,	,	_	4	punct	_
10	and	and	CC	_	4	cc	_
11	then	then	RB	_	12	advmod	12:AM-TMP
12	drag	drag	VB	p2=VBP|pb=drag.01	4	conj	_
13	left	leave	VBN	p2=RB|pb=leave.06	12	xcomp	12:A1=PPT
14	/	/	SYM	p2=,	12	punct	_
15	right	right	RB	p2=JJ	12	advmod	_
16	or	or	CC	_	15	cc	_
17	up	up	RB	_	15	conj	_
18	/	/	SYM	p2=,	12	punct	_
19	down	down	RB	p2=RP	12	advmod	12:A2=DIR
20	,	,	,	_	24	punct	_
21	that	that	DT	p2=IN	22	det	_
22	layer	layer	NN	_	24	nsubj	24:A1=PPT
23	should	should	MD	_	24	aux	24:AM-MOD
24	slide	slide	VB	pb=slide.01	0	root	_
25	.	.	.	_	24	punct	_

1	If	if	IN	_	3	mark	_
2	you	you	PRP	_	3	nsubj	3:A0=PAG;5:A0=PAG
3	click	click	VBP	p2=VB|pb=click.01	16	advcl	16:AM-ADV
4	/	/	SYM	p2=,	3	punct	_
5	drag	drag	VB	p2=VBP|pb=drag.01	3	dep	_
6	outside	outside	RB	p2=NN	5	advmod	5:A2=DIR
7	in	in	IN	_	5	prep	5:AM-LOC
8	the	the	DT	_	10	det	_
9	white	white	JJ	_	10	amod	_
10	area	area	NN	_	7	pobj	_
11	,	,	,	_	16	punct	_
12	the	the	DT	_	14	det	_
13	whole	whole	JJ	_	14	amod	_
14	thing	thing	NN	_	16	nsubj	16:A1=PPT
15	should	should	MD	_	16	aux	16:AM-MOD
16	rotate	rotate	VB	pb=rotate.02	0	root	_
17	.	.	.	_	16	punct	_

1	Clicking	click	VBG	p2=NN|pb=click.01	6	csubj	6:A0=PAG
2	in	in	IN	_	1	prep	1:AM-LOC
3	the	the	DT	_	5	det	_
4	white	white	JJ	_	5	amod	_
5	area	area	NN	_	2	pobj	_
6	makes	make	VBZ	pb=make.02	30	ccomp	_
7	the	the	DT	_	9	det	_
8	whole	whole	JJ	_	9	amod	_
9	thing	thing	NN	_	10	nsubj	10:A1=PPT
10	rotate	rotate	VBP	p2=RB|pb=rotate.02	6	ccomp	6:A1=PRD
11	but	but	CC	_	6	cc	_
12	then	then	RB	_	16	advmod	16:AM-TMP
13	randomly	randomly	RB	_	16	advmod	_
14	so	so	RB	_	16	advmod	_
15	does	do	VBZ	_	16	aux	_
16	clicking	click	VBG	pb=click.01	6	conj	_
17	and	and	CC	_	16	cc	_
18	dragging	drag	VBG	pb=drag.01	16	conj	_
19	on	on	IN	_	18	prep	18:A2=DIR
20	a	a	DT	_	21	det	_
21	square	square	NN	p2=JJ	19	pobj	_
22	,	,	,	_	16	punct	_
23	and	and	CC	_	16	cc	_
24	right	right	RB	p2=JJ	26	advmod	_
25	/	/	SYM	p2=,	26	punct	_
26	left	leave	VBD	p2=VBN|pb=leave.01	16	conj	_
27	up	up	RP	p2=RB	26	prt	26:C-V
28	/	/	SYM	p2=,	30	punct	_
29	down	down	RB	p2=RP	30	advmod	_
30	seems	seem	VBZ	pb=seem.01	0	root	_
31	random	random	JJ	_	30	oprd	30:A1=PPT
32	when	when	WRB	_	35	advmod	35:R-AM-TMP
33	it	it	PRP	_	35	nsubj	35:A1=PPT
34	does	do	VBZ	_	35	aux	_
35	happen	happen	VB	pb=happen.01	30	advcl	_
36	.	.	.	_	30	punct	_

1	Not	not	RB	_	4	neg	_
2	just	just	RB	_	4	advmod	_
3	the	the	DT	_	4	det	_
4	direction	direction	NN	_	0	root	_
5	of	of	IN	_	4	prep	_
6	rotation	rotation	NN	_	5	pobj	_
7	but	but	CC	_	4	cc	_
8	the	the	DT	_	9	det	_
9	layer	layer	NN	_	4	conj	11:A1=PPT
10	that	that	WDT	p2=IN	11	nsubj	11:R-A1
11	rotates	rotate	VBZ	pb=rotate.02	9	rcmod	_
12	.	.	.	_	9	punct	_

1	I	I	PRP	_	3	nsubj	3:A0=PAG;9:A0=PAG
2	can	can	MD	_	3	aux	3:AM-MOD;9:AM-MOD
3	click	click	VB	pb=click.01	21	ccomp	_
4	on	on	IN	_	3	prep	3:AM-LOC
5	the	the	DT	_	7	det	_
6	middle	middle	JJ	p2=NN	7	amod	_
7	row	row	NN	_	4	pobj	_
8	and	and	CC	_	3	cc	_
9	drag	drag	VB	pb=drag.01	3	conj	_
10	down	down	RP	_	9	prt	9:A2=DIR
11	and	and	CC	_	9	cc	_
12	the	the	DT	_	14	det	_
13	left	left	JJ	p2=VBN	14	amod	_
14	layer	layer	NN	_	15	nsubj	15:A0=PAG
15	rotates	rotate	VBZ	p2=NNS|pb=rotate.02	9	conj	_
16	instead	instead	RB	_	15	advmod	15:AM-ADV
17	,	,	,	_	21	punct	_
18	then	then	RB	_	21	advmod	_
19	when	when	WRB	_	21	advmod	21:R-AM-TMP
20	I	I	PRP	_	21	nsubj	21:A0=PAG;23:A0=PAG
21	try	try	VBP	pb=try.01	0	root	_
22	to	to	TO	_	23	aux	_
23	put	put	VB	pb=put.01	21	xcomp	21:A1=PPT
24	it	it	PRP	_	23	dobj	23:A1=PPT
25	back	back	RB	p2=RP	23	prt	23:AM-DIR
26	the	the	DT	_	28	det	_
27	whole	whole	JJ	_	28	amod	_
28	thing	thing	NN	_	29	nsubj	_
29	rotates	rotates	NNS	p2=VBZ	23	dobj	_
30	.	.	.	_	21	punct	_

1	It	it	PRP	_	2	nsubj	_
2	's	be	VBZ	pb=be.01	0	root	_
3	tricky	tricky	JJ	_	2	acomp	2:A2=PRD
4	to	to	TO	_	5	aux	_
5	know	know	VB	pb=know.01	2	xcomp	2:A1=PPT
6	which	which	WDT	_	7	det	_
7	face	face	NN	p2=VBP	10	dobj	10:R-A1
8	you	you	PRP	_	10	nsubj	10:A1=PPT
9	can	can	MD	_	10	aux	10:AM-MOD
10	turn	turn	VB	pb=turn.01	5	ccomp	5:A1=PPT
11	by	by	IN	p2=RP	10	prep	10:AM-MNR
12	clicking	click	VBG	p2=NN|pb=click.01	11	pcomp	_
13	where	where	WRB	p2=RB	12	advmod	12:A1=PPT
14	,	,	,	_	2	punct	_
15	but	but	CC	_	2	cc	_
16	it	it	PRP	_	17	nsubj	_
17	's	be	VBZ	pb=be.01	2	conj	_
18	possible	possible	JJ	_	17	acomp	17:A2=PRD
19	to	to	TO	_	20	aux	_
20	get	get	VB	pb=get.01	17	xcomp	17:A1=PPT
21	a	a	DT	_	22	det	_
22	hang	hang	NN	_	20	dobj	20:A1=PPT
23	of	of	IN	_	22	prep	_
24	it	it	PRP	_	23	pobj	_
25	.	.	.	_	17	punct	_

1	The	the	DT	_	3	det	_
2	whole	whole	JJ	_	3	amod	_
3	tapping	tap	VBG	p2=NN	7	nsubj	7:A1=PPT
4	outside	outside	RB	p2=RP	3	advmod	_
5	to	to	TO	p2=IN	6	aux	_
6	rotate	rotate	VB	pb=rotate.02	3	advcl	_
7	is	be	VBZ	pb=be.01	0	root	_
8	horrible	horrible	JJ	_	7	acomp	7:A2=PRD
9	,	,	,	_	7	punct	_
10	and	and	CC	_	7	cc	_
11	for	for	IN	_	20	prep	20:A2=VSP
12	some	some	DT	_	13	det	_
13	reason	reason	NN	_	11	pobj	_
14	tapping	tap	VBG	pb=tap.01	13	partmod	_
15	anywhere	anywhere	RB	_	14	advmod	14:AM-LOC
16	on	on	IN	_	14	prep	14:A1=PPT
17	the	the	DT	_	19	det	_
18	middle	middle	JJ	p2=NN	19	amod	_
19	slice	slice	NN	_	16	pobj	_
20	rotates	rotate	VBZ	pb=rotate.02	7	conj	_
21	it	it	PRP	_	20	dobj	20:A1=PPT
22	,	,	,	_	20	punct	_
23	which	which	WDT	_	25	nsubj	25:R-A1
24	is	be	VBZ	_	25	aux	_
25	infuriating	infuriate	VBG	p2=NN|pb=infuriate.01	20	conj	_
26	.	.	.	_	20	punct	_

1	Seriously	seriously	RB	_	4	advmod	_
2	though	though	IN	p2=RB	4	mark	_
3	there	there	EX	_	4	expl	_
4	are	be	VBP	pb=be.02	0	root	_
5	so	so	RB	_	6	advmod	_
6	many	many	JJ	_	9	amod	_
7	more	more	RBR	p2=JJR	8	advmod	_
8	important	important	JJ	_	9	amod	_
9	things	thing	NNS	_	4	attr	4:A1=PPT;11:A1=PPT
10	to	to	TO	_	11	aux	_
11	learn	learn	VB	pb=learn.01	9	infmod	_
12	than	than	IN	_	11	prep	_
13	this	this	DT	_	12	pobj	_
14	.	.	.	_	4	punct	_

1	It	it	PRP	_	2	nsubj	2:A1=PPT
2	's	be	VBZ	pb=be.01	0	root	_
3	like	like	IN	p2=UH	2	prep	2:A2=PRD
4	playing	play	VBG	p2=NN|pb=play.01	3	pcomp	_
5	chess	chess	NN	_	4	dobj	4:A1=PPT
6	.	.	.	_	2	punct	_

1	Or	or	CC	_	3	cc	_
2	any	any	DT	_	3	det	_
3	game	game	NN	_	0	root	_
4	.	.	.	_	3	punct	_

1	Real	real	JJ	_	2	amod	_
2	life	life	NN	_	3	nsubj	3:A1=PPT
3	is	be	VBZ	pb=be.01	0	root	_
4	so	so	RB	_	5	advmod	_
5	much	much	RB	_	6	advmod	_
6	more	more	JJR	_	7	amod	_
7	fun	fun	NN	p2=JJ	3	attr	3:A2=PRD
8	.	.	.	_	3	punct	_

1	I	I	PRP	_	2	nsubj	2:A0=PAG
2	believe	believe	VBP	pb=believe.01	0	root	_
3	you	you	PRP	_	5	nsubj	5:A0=PAG
4	do	do	VBP	_	5	aux	_
5	learn	learn	VB	p2=VBN|pb=learn.01	2	ccomp	2:A1=PPT
6	real	real	JJ	_	8	amod	_
7	life	life	NN	_	8	nn	_
8	lessons	lesson	NNS	_	5	dobj	5:A1=PPT
9	from	from	IN	_	8	prep	_
10	Rubik	rubik	NNP	_	12	poss	_
11	's	's	POS	_	10	possessive	_
12	Cube	cube	NNP	_	9	pobj	_
13	.	.	.	_	2	punct	_

1	You	you	PRP	_	2	nsubj	2:A0=PAG
2	learn	learn	VBP	pb=learn.01	0	root	_
3	that	that	IN	p2=DT	8	complm	_
4	persistence	persistence	NN	_	8	nsubjpass	8:A1=PPT
5	and	and	CC	_	4	cc	_
6	honesty	honesty	NN	_	4	conj	_
7	are	be	VBP	_	8	auxpass	_
8	rewarded	reward	VBN	pb=reward.01	2	ccomp	2:A1=PPT
9	.	.	.	_	2	punct	_

1	You	you	PRP	_	2	nsubj	2:A0=PPT
2	feel	feel	VBP	pb=feel.01	0	root	_
3	a	a	DT	_	5	det	_
4	huge	huge	JJ	p2=NN	5	amod	_
5	since	since	IN	p2=NN	2	prep	2:AM-TMP
6	of	of	IN	_	5	prep	_
7	accomplishment	accomplishment	NN	_	6	pobj	_
8	when	when	WRB	_	10	advmod	10:R-AM-TMP
9	you	you	PRP	_	10	nsubj	10:A0=PAG
10	succeed	succeed	VBP	pb=succeed.01	2	advcl	2:AM-TMP
11	.	.	.	_	2	punct	_

1	This	this	DT	_	4	nsubjpass	4:A1=PPT
2	is	be	VBZ	_	4	auxpass	_
3	not	not	RB	_	4	neg	4:AM-NEG
4	accomplished	accomplish	VBN	pb=accomplish.01	0	root	_
5	by	by	IN	_	4	agent	4:A0=PAG
6	chance	chance	NN	_	5	pobj	_
7	.	.	.	_	4	punct	_

1	You	you	PRP	_	3	nsubj	3:A0=PAG
2	must	must	MD	_	3	aux	3:AM-MOD
3	learn	learn	VB	pb=learn.01	0	root	_
4	sequences	sequence	NNS	_	3	dobj	3:A1=PPT
5	of	of	IN	_	4	prep	_
6	repeatable	repeatable	JJ	p2=NN	7	amod	_
7	steps	step	NNS	_	5	pobj	10:A0=PAG
8	that	that	WDT	_	10	nsubj	10:R-A0
9	will	will	MD	_	10	aux	10:AM-MOD
10	accomplish	accomplish	VB	pb=accomplish.01	7	rcmod	_
11	desired	desire	VBN	p2=JJ|pb=desire.01	12	amod	_
12	goals	goal	NNS	_	10	dobj	10:A1=PPT;11:A1=PPT
13	.	.	.	_	3	punct	_

1	When	when	WRB	_	3	advmod	3:R-AM-TMP
2	you	you	PRP	_	3	nsubj	3:A0=PAG
3	solve	solve	VBP	pb=solve.01	29	advcl	29:AM-TMP
4	the	the	DT	_	5	det	_
5	cube	cube	NN	_	3	dobj	3:A1=PPT
6	without	without	IN	_	3	prep	3:AM-MNR
7	help	help	NN	_	6	pobj	_
8	or	or	CC	_	7	cc	_
9	cheating	cheating	NN	p2=VBG	7	conj	_
10	,	,	,	_	29	punct	_
11	as	as	IN	_	13	mark	_
12	I	I	PRP	_	13	nsubj	13:A0=PAG
13	did	do	VBD	pb=do.02	29	advcl	29:AM-ADV
14	as	as	IN	p2=RB	13	prep	13:AM-PRD
15	a	a	DT	_	16	det	_
16	teen	teen	NN	_	14	pobj	21:AM-TMP
17	when	when	WRB	_	21	advmod	21:R-AM-TMP
18	the	the	DT	_	19	det	_
19	cube	cube	NN	_	21	nsubj	21:A0=PAG
20	first	#ord#	RB	_	21	advmod	21:AM-TMP
21	hit	hit	VBD	pb=hit.02	16	rcmod	_
22	the	the	DT	_	23	det	_
23	market	market	NN	_	21	dobj	21:A1=GOL
24	,	,	,	_	29	punct	_
25	you	you	PRP	_	26	nsubj	26:A0=PAG
26	know	know	VBP	pb=know.01	29	parataxis	_
27	you	you	PRP	_	29	nsubj	29:A0=PAG;38:A0=PAG
28	've	have	VBP	_	29	aux	_
29	got	get	VBN	p2=VBD|pb=get.02	0	root	_
30	the	the	DT	_	31	det	_
31	chops	chop	NNS	_	29	dobj	29:A1=PPT
32	for	for	IN	_	31	prep	_
33	much	much	RB	_	34	advmod	_
34	greater	great	JJR	_	35	amod	_
35	goals	goal	NNS	_	32	pobj	_
36	,	,	,	_	35	punct	_
37	like	like	IN	p2=VB	29	prep	29:AM-MNR
38	engineering	engineer	VBG	p2=NN|pb=engineer.01	37	pcomp	_
39	great	great	JJ	_	40	amod	_
40	products	product	NNS	_	38	dobj	38:A1=PPT;43:A1=PPT
41	that	that	WDT	_	43	nsubj	43:R-A1
42	will	will	MD	_	43	aux	43:AM-MOD
43	be	be	VB	pb=be.01	40	rcmod	_
44	an	an	DT	_	46	det	_
45	enduring	endure	VBG	p2=JJ|pb=endure.01	46	amod	_
46	benefit	benefit	NN	_	43	attr	45:A1=PPT;43:A2=PRD
47	to	to	IN	_	46	prep	_
48	the	the	DT	_	49	det	_
49	world	world	NN	_	47	pobj	_
50	.	.	.	_	29	punct	_

1	I	I	PRP	_	2	nsubj	2:A0=PAG
2	guess	guess	VBP	pb=guess.01	0	root	_
3	it	it	PRP	_	4	nsubj	4:A1=PPT
4	's	be	VBZ	pb=be.01	2	ccomp	2:A1=PPT
5	an	an	DT	_	7	det	_
6	introvert	introvert	JJ	p2=NN	7	amod	_
7	thing	thing	NN	_	4	attr	4:A2=PRD
8	.	.	.	_	2	punct	_

1	For	for	IN	_	6	prep	6:AM-DIS
2	introverts	introvert	NNS	p2=VBZ	1	pobj	_
3	the	the	DT	_	5	det	_
4	real	real	JJ	_	5	amod	_
5	fun	fun	NN	_	6	nsubj	6:A1=PPT
6	happens	happen	VBZ	pb=happen.01	0	root	_
7	inside	inside	IN	_	6	advmod	6:AM-LOC
8	you	you	PRP	_	9	nsubj	9:A0=PPT
9	mind	mind	VBP	p2=NN|pb=mind.01	6	advcl	6:AM-ADV
10	.	.	.	_	6	punct	_

1	It	it	PRP	_	2	nsubj	2:A1=PPT
2	's	be	VBZ	pb=be.01	0	root	_
3	the	the	DT	_	4	det	_
4	journey	journey	NN	_	2	attr	6:A1=PPT;2:A2=PRD
5	that	that	WDT	p2=IN	6	nsubj	6:R-A1
6	matters	matter	VBZ	pb=matter.01	4	rcmod	_
7	,	,	,	_	4	punct	_
8	not	not	RB	p2=CC	4	neg	_
9	the	the	DT	_	10	det	_
10	path	path	NN	_	4	appos	_
11	or	or	CC	_	10	cc	_
12	the	the	DT	_	13	det	_
13	destination	destination	NN	_	10	conj	_
14	.	.	.	_	2	punct	_

1	Honesty	honesty	NNP	p2=NN	2	nsubj	2:A1=PPT
2	is	be	VBZ	pb=be.01	0	root	_
3	it	it	PRP	_	4	nsubj	4:A1=PPT
4	's	be	VBZ	p2=POS|pb=be.01	2	ccomp	2:A2=PRD
5	own	own	JJ	_	6	amod	_
6	reward	reward	NN	_	4	attr	4:A2=PRD
7	.	.	.	_	2	punct	_

1	The	the	DT	_	3	det	_
2	google	google	NNP	p2=NN	3	nn	_
3	cube	cube	NN	_	6	nsubjpass	5:A1=PPT
4	always	always	RB	_	6	advmod	5:AM-TMP;6:AM-TMP
5	gets	get	VBZ	pb=get.03	6	auxpass	_
6	scrambled	scramble	VBN	p2=VBD|pb=scramble.03	0	root	5:A2=GOL
7	exactly	exactly	RB	_	9	advmod	_
8	the	the	DT	_	9	det	_
9	same	same	JJ	_	6	advmod	6:AM-MNR
10	every	every	DT	_	11	det	_
11	time	time	NN	_	6	npadvmod	6:AM-TMP
12	.	.	.	_	6	punct	_

1	The	the	DT	_	3	det	_
2	optimal	optimal	JJ	p2=NN	3	amod	_
3	solution	solution	NN	_	4	nsubj	4:A1=PPT
4	is	be	VBZ	pb=be.01	16	ccomp	_
5	16	0	CD	_	8	num	_
6	half	half	JJ	p2=NN	8	amod	_
7	turn	turn	NN	p2=VBN	8	nn	_
8	moves	move	NNS	_	4	attr	4:A2=PRD
9	(	(	-LRB-	_	12	punct	_
10	19	0	CD	_	11	num	_
11	quarter	quarter	NN	_	12	nsubj	_
12	turn	turn	VB	p2=NN|pb=turn.02	8	parataxis	_
13	moves	move	NNS	p2=FW	12	dobj	12:A1=PPT
14	,	,	,	_	16	punct	_
15	it	it	PRP	_	16	nsubj	_
16	's	be	VBZ	pb=be.01	0	root	_
17	very	very	RB	_	18	advmod	_
18	hard	hard	JJ	_	16	acomp	16:A2=PRD
19	to	to	TO	_	20	aux	_
20	turn	turn	VB	pb=turn.01	16	xcomp	16:A1=PPT
21	a	a	DT	_	22	det	_
22	face	face	NN	_	20	dobj	20:A1=PPT
23	twice	twice	RB	_	24	advmod	_
24	in	in	IN	_	20	prep	20:AM-TMP
25	one	#crd#	CD	p2=PRP	26	num	_
26	move	move	NN	p2=VB	24	pobj	_
27	)	)	-RRB-	_	16	punct	_
28	.	.	.	_	16	punct	_

1	I	I	PRP	_	2	nsubj	5:A0=PAG;2:A1=PPT
2	was	be	VBD	pb=be.01	0	root	_
3	able	able	JJ	_	2	acomp	2:A2=PRD
4	to	to	TO	_	5	aux	_
5	perform	perform	VB	pb=perform.01	3	xcomp	_
6	it	it	PRP	_	5	dobj	5:A1=PPT
7	in	in	IN	_	5	prep	5:AM-TMP
8	11	0	CD	_	9	num	_
9	seconds	#ord#	NNS	_	7	pobj	_
10	.	.	.	_	2	punct	_

1	Congratulations	congratulation	NNS	_	0	root	_
2	.	.	.	_	1	punct	_

1	I	I	PRP	_	2	nsubj	2:A0
2	think	think	VBP	pb=think.01	0	root	_
3	you	you	PRP	_	4	nsubj	4:A0=PAG
4	missed	miss	VBD	p2=VBN|pb=miss.02	2	ccomp	2:A1=PPT
5	an	an	DT	_	7	det	_
6	'	'	``	p2=''	7	punct	_
7	every	every	NN	p2=DT	4	dobj	4:A1=PPT
8	'	'	''	_	7	punct	_
9	in	in	RB	p2=IN	10	advmod	_
10	there	there	RB	_	4	advmod	_
11	.	.	.	_	2	punct	_

1	Fuck	fuck	UH	_	2	intj	4:AM-DIS
2	Rubik	rubik	NNP	p2=UH	0	root	_
3	and	and	CC	_	2	cc	_
4	fuck	fuck	VBD	p2=UH|pb=fuck.01	2	conj	_
5	his	his	PRP$	_	6	poss	_
6	cube	cube	NN	_	4	dobj	4:A1=PPT
7	too	too	RB	_	4	advmod	4:AM-DIS
8	.	.	.	_	2	punct	_

1	If	if	IN	_	9	mark	_
2	turning	turn	VBG	pb=turn.01	9	csubj	9:A1=PPT
3	a	a	DT	_	4	det	_
4	cube	cube	NN	_	2	dobj	2:A1=PPT
5	around	around	IN	p2=RB	2	advmod	2:AM-DIR
6	in	in	IN	_	2	prep	2:AM-LOC
7	your	your	PRP$	_	8	poss	_
8	hands	hand	NNS	_	6	pobj	_
9	is	be	VBZ	pb=be.01	17	advcl	17:AM-ADV
10	your	your	PRP$	_	11	poss	_
11	idea	idea	NN	_	9	attr	9:A2=PRD
12	of	of	IN	_	11	prep	_
13	entertainment	entertainment	NN	_	12	pobj	_
14	,	,	,	_	17	punct	_
15	then	then	RB	_	17	advmod	17:AM-TMP
16	you	you	PRP	_	17	nsubj	17:A0=PAG;19:A0=PAG
17	need	need	VBP	pb=need.01	0	root	_
18	to	to	TO	_	19	aux	_
19	get	get	VB	pb=get.01	17	xcomp	17:A1=PPT
20	out	out	RP	p2=RB	19	prt	19:A2=DIR
21	more	more	JJR	p2=RBR	19	dobj	19:A1=PPT
22	.	.	.	_	17	punct	_

1	Subscribe	subscribe	NNP	p2=VB	2	nn	_
2	Today	today	NN	p2=NNP	4	nsubj	4:A0=PAG
3	to	to	TO	_	4	aux	_
4	get	get	VB	pb=get.01	0	root	_
5	the	the	DT	_	8	det	_
6	latest	late	JJS	_	8	amod	_
7	ExtremeTech	extremetech	NNP	p2=JJ	8	nn	_
8	news	news	NN	_	4	dobj	4:A1=PPT;9:A1=PPT
9	delivered	deliver	VBD	p2=VBN|pb=deliver.01	8	partmod	_
10	right	right	RB	p2=JJ	11	advmod	_
11	to	to	IN	_	9	prep	9:A2=GOL
12	your	your	PRP$	_	13	poss	_
13	inbox	inbox	NN	_	11	pobj	_
14	.	.	.	_	4	punct	_

